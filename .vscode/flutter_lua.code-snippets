{

	"Align:new": {
		"scope": "lua",
		"prefix": "Align",
		"body": [
			"Align:new({\n\tchild = $1,\n\talignment = $2\n})"
		],
		"description": "Align:new"
	},
	"Alignment.topLeft": {
		"scope": "lua",
		"prefix": "Alignment.topLeft",
		"body": [
			"Alignment.topLeft"
		],
		"description": "Alignment.topLeft"
	},
	"Alignment.topCenter": {
		"scope": "lua",
		"prefix": "Alignment.topCenter",
		"body": [
			"Alignment.topCenter"
		],
		"description": "Alignment.topCenter"
	},
	"Alignment.topRight": {
		"scope": "lua",
		"prefix": "Alignment.topRight",
		"body": [
			"Alignment.topRight"
		],
		"description": "Alignment.topRight"
	},
	"Alignment.centerLeft": {
		"scope": "lua",
		"prefix": "Alignment.centerLeft",
		"body": [
			"Alignment.centerLeft"
		],
		"description": "Alignment.centerLeft"
	},
	"Alignment.center": {
		"scope": "lua",
		"prefix": "Alignment.center",
		"body": [
			"Alignment.center"
		],
		"description": "Alignment.center"
	},
	"Alignment.centerRight": {
		"scope": "lua",
		"prefix": "Alignment.centerRight",
		"body": [
			"Alignment.centerRight"
		],
		"description": "Alignment.centerRight"
	},
	"Alignment.bottomLeft": {
		"scope": "lua",
		"prefix": "Alignment.bottomLeft",
		"body": [
			"Alignment.bottomLeft"
		],
		"description": "Alignment.bottomLeft"
	},
	"Alignment.bottomCenter": {
		"scope": "lua",
		"prefix": "Alignment.bottomCenter",
		"body": [
			"Alignment.bottomCenter"
		],
		"description": "Alignment.bottomCenter"
	},
	"Alignment.bottomRight": {
		"scope": "lua",
		"prefix": "Alignment.bottomRight",
		"body": [
			"Alignment.bottomRight"
		],
		"description": "Alignment.bottomRight"
	},
	"Axis.horizontal": {
		"scope": "lua",
		"prefix": "Axis.horizontal",
		"body": [
			"Axis.horizontal"
		],
		"description": "Axis.horizontal"
	},
	"Axis.vertical": {
		"scope": "lua",
		"prefix": "Axis.vertical",
		"body": [
			"Axis.vertical"
		],
		"description": "Axis.vertical"
	},
	"AppBar:new": {
		"scope": "lua",
		"prefix": "AppBar:new",
		"body": [
			"AppBar:new({\n\tleading = $1,\n\ttitle = $2,\n\tactions = $3\n})"
		],
		"description": "AppBar:new"
	},
	"asyncFun()": {
		"scope": "lua",
		"prefix": "asyncFun()",
		"body": [
			"asyncFun({\n\ttask = $1,\n\tcallback = $2\n})"
		],
		"description": "asyncFun()"
	},
	"delayFun()": {
		"scope": "lua",
		"prefix": "delayFun()",
		"body": [
			"delayFun({\n\ttask = $1,\n\ttime = $2,\n\tcallback = $3\n})"
		],
		"description": "delayFun()"
	},
	"readFile()": {
		"scope": "lua",
		"prefix": "readFile()",
		"body": [
			"readFile({\n\tpath = $1,\n\tasync = true$2,\n\tcallback = function(exists,value)\n\tend\n})"
		],
		"description": "readFile()"
	},
	"existsFile()": {
		"scope": "lua",
		"prefix": "existsFile()",
		"body": [
			"existsFile({\n\tpath = $1,\n\tasync = true$2,\n\tcallback = function(exists)\n\tend\n})"
		],
		"description": "existsFile()"
	},
	"Helper:showDlg()": {
		"scope": "lua",
		"prefix": "Helper:showDlg()",
		"body": [
			"Helper:showDlg({\n\tchild = $1,\n\tcontext = ctx$2,,\n\tbarrierDismissible = false$2\n})"
		],
		"description": "Helper:showDlg()"
	},
	"saveFile()": {
		"scope": "lua",
		"prefix": "saveFile()",
		"body": [
			"saveFile({\n\tpath = $1,\n\tasync = true$2,\n\tcontent = $2,\n\tcallback = function(flag,msg)\n\tend$3\n})"
		],
		"description": "saveFile()"
	},
	"deleteFile()": {
		"scope": "lua",
		"prefix": "deleteFile()",
		"body": [
			"deleteFile({\n\tpath = $1,\n\tasync = true$2,\n\trecursive = false,\n\tcallback = $3\n})"
		],
		"description": "deleteFile()"
	},
	"Column:new": {
		"scope": "lua",
		"prefix": "Column:new",
		"body": [
			"Column:new({\n\tchildren = $1,\n\tmainAxisAlignment = MainAxisAlignment.start$2,\n\tcrossAxisAlignment = CrossAxisAlignment.start$3\n})"
		],
		"description": "Column:new"
	},
	"Row:new": {
		"scope": "lua",
		"prefix": "Row:new",
		"body": [
			"Row:new({\n\tchildren = $1,\n\tmainAxisAlignment = MainAxisAlignment.start$2,\n\tcrossAxisAlignment = CrossAxisAlignment.start$3\n})"
		],
		"description": "Row:new"

	},
	"mainAxisAlignment = ": {
		"scope": "lua",
		"prefix": "mainAxisAlignment = ",
		"body": [
			"mainAxisAlignment = "
		],
		"description": "mainAxisAlignment = "
	},
	"ClipRRect:new": {
		"scope": "lua",
		"prefix": "ClipRRect:new",
		"body": [
			"ClipRRect:new({\n\tchild = $1,\n\tborderRadius = $2,\n\tclipBehavior = $3\n})"
		],
		"description": "ClipRRect:new"
	},
	"clipBehavior": {
		"scope": "lua",
		"prefix": "clipBehavior",
		"body": [
			"clipBehavior"
		],
		"description": "clipBehavior"
	},
	"crossAxisAlignment = ": {
		"scope": "lua",
		"prefix": "crossAxisAlignment = ",
		"body": [
			"crossAxisAlignment = "
		],
		"description": "crossAxisAlignment = "
	},
	"FontWeight.w400": {
		"scope": "lua",
		"prefix": "FontWeight.w400",
		"body": [
			"FontWeight.w400"
		],
		"description": "FontWeight.w400"
	},
	"FontWeight.normal": {
		"scope": "lua",
		"prefix": "FontWeight.normal",
		"body": [
			"FontWeight.normal"
		],
		"description": "FontWeight.normal"
	},
	"FontWeight.bold": {
		"scope": "lua",
		"prefix": "FontWeight.bold",
		"body": [
			"FontWeight.bold"
		],
		"description": "FontWeight.bold"
	},
	"StackFit.loose": {
		"scope": "lua",
		"prefix": "StackFit.loose",
		"body": [
			"StackFit.loose"
		],
		"description": "StackFit.loose"
	},
	"StackFit.expand": {
		"scope": "lua",
		"prefix": "StackFit.expand",
		"body": [
			"StackFit.expand"
		],
		"description": "StackFit.expand"
	},
	"StackFit.passthrough": {
		"scope": "lua",
		"prefix": "StackFit.passthrough",
		"body": [
			"StackFit.passthrough"
		],
		"description": "StackFit.passthrough"
	},
	"BoxFit.fill": {
		"scope": "lua",
		"prefix": "BoxFit.fill",
		"body": [
			"BoxFit.fill"
		],
		"description": "BoxFit.fill"
	},
	"BoxFit.contain": {
		"scope": "lua",
		"prefix": "BoxFit.contain",
		"body": [
			"BoxFit.contain"
		],
		"description": "BoxFit.contain"
	},
	"BoxFit.cover": {
		"scope": "lua",
		"prefix": "BoxFit.cover",
		"body": [
			"BoxFit.cover"
		],
		"description": "BoxFit.cover"
	},
	"BoxFit.fitWidth": {
		"scope": "lua",
		"prefix": "BoxFit.fitWidth",
		"body": [
			"BoxFit.fitWidth"
		],
		"description": "BoxFit.fitWidth"
	},
	"BoxFit.fitHeight": {
		"scope": "lua",
		"prefix": "BoxFit.fitHeight",
		"body": [
			"BoxFit.fitHeight"
		],
		"description": "BoxFit.fitHeight"
	},
	"BoxFit.none": {
		"scope": "lua",
		"prefix": "BoxFit.none",
		"body": [
			"BoxFit.none"
		],
		"description": "BoxFit.none"
	},
	"BoxFit.scaleDown": {
		"scope": "lua",
		"prefix": "BoxFit.scaleDown",
		"body": [
			"BoxFit.scaleDown"
		],
		"description": "BoxFit.scaleDown"
	},
	"Clip.none": {
		"scope": "lua",
		"prefix": "Clip.none",
		"body": [
			"Clip.none"
		],
		"description": "Clip.none"
	},
	"Clip.hardEdge": {
		"scope": "lua",
		"prefix": "Clip.hardEdge",
		"body": [
			"Clip.hardEdge"
		],
		"description": "Clip.hardEdge"
	},
	"Clip.antiAlias": {
		"scope": "lua",
		"prefix": "Clip.antiAlias",
		"body": [
			"Clip.antiAlias"
		],
		"description": "Clip.antiAlias"
	},
	"Clip.antiAliasWithSaveLayer": {
		"scope": "lua",
		"prefix": "Clip.antiAliasWithSaveLayer",
		"body": [
			"Clip.antiAliasWithSaveLayer"
		],
		"description": "Clip.antiAliasWithSaveLayer"
	},
	"CrossAxisAlignment.start": {
		"scope": "lua",
		"prefix": "CrossAxisAlignment.start",
		"body": [
			"CrossAxisAlignment.start"
		],
		"description": "CrossAxisAlignment.start"
	},
	"CrossAxisAlignment.bottom": {
		"scope": "lua",
		"prefix": "CrossAxisAlignment.bottom",
		"body": [
			"CrossAxisAlignment.bottom"
		],
		"description": "CrossAxisAlignment.bottom"
	},
	"CrossAxisAlignment.center": {
		"scope": "lua",
		"prefix": "CrossAxisAlignment.center",
		"body": [
			"CrossAxisAlignment.center"
		],
		"description": "CrossAxisAlignment.center"
	},
	"CrossAxisAlignment.stretch": {
		"scope": "lua",
		"prefix": "CrossAxisAlignment.stretch",
		"body": [
			"CrossAxisAlignment.stretch"
		],
		"description": "CrossAxisAlignment.stretch"
	},
	"CrossAxisAlignment.baseline": {
		"scope": "lua",
		"prefix": "CrossAxisAlignment.baseline",
		"body": [
			"CrossAxisAlignment.baseline"
		],
		"description": "CrossAxisAlignment.baseline"
	},
	"MainAxisAlignment.start": {
		"scope": "lua",
		"prefix": "MainAxisAlignment.start",
		"body": [
			"MainAxisAlignment.start"
		],
		"description": "MainAxisAlignment.start"
	},
	"MainAxisAlignment.bottom": {
		"scope": "lua",
		"prefix": "MainAxisAlignment.bottom",
		"body": [
			"MainAxisAlignment.bottom"
		],
		"description": "MainAxisAlignment.bottom"
	},
	"MainAxisAlignment.center": {
		"scope": "lua",
		"prefix": "MainAxisAlignment.center",
		"body": [
			"MainAxisAlignment.center"
		],
		"description": "MainAxisAlignment.center"
	},
	"MainAxisAlignment.spaceBetween": {
		"scope": "lua",
		"prefix": "MainAxisAlignment.spaceBetween",
		"body": [
			"MainAxisAlignment.spaceBetween"
		],
		"description": "MainAxisAlignment.spaceBetween"
	},
	"MainAxisAlignment.spaceAround": {
		"scope": "lua",
		"prefix": "MainAxisAlignment.spaceAround",
		"body": [
			"MainAxisAlignment.spaceAround"
		],
		"description": "MainAxisAlignment.spaceAround"
	},
	"MainAxisAlignment.spaceEvenly": {
		"scope": "lua",
		"prefix": "MainAxisAlignment.spaceEvenly",
		"body": [
			"MainAxisAlignment.spaceEvenly"
		],
		"description": "MainAxisAlignment.spaceEvenly"
	},
	"MainAxisSize.min": {
		"scope": "lua",
		"prefix": "MainAxisSize.min",
		"body": [
			"MainAxisSize.min"
		],
		"description": "MainAxisSize.min"
	},
	"MainAxisSize.max": {
		"scope": "lua",
		"prefix": "MainAxisSize.max",
		"body": [
			"MainAxisSize.max"
		],
		"description": "MainAxisSize.max"
	},
	"Icons": {
		"scope": "lua",
		"prefix": "Icons",
		"body": [
			"Icons"
		],
		"description": "Icons"
	},
	"Icons.arrow_back": {
		"scope": "lua",
		"prefix": "Icons.ac_unit",
		"body": [
			"Icons.ac_unit"
		],
		"description": "Icons.ac_unit"
	},
	"Icons.ac_unit": {
		"scope": "lua",
		"prefix": "Icons.ac_unit",
		"body": [
			"Icons.ac_unit"
		],
		"description": "Icons.ac_unit"
	},
	"Icons.arrow_downward": {
		"scope": "lua",
		"prefix": "Icons.arrow_downward",
		"body": [
			"Icons.arrow_downward"
		],
		"description": "Icons.arrow_downward"
	},
	"Icons.arrow_forward": {
		"scope": "lua",
		"prefix": "Icons.arrow_forward",
		"body": [
			"Icons.arrow_forward"
		],
		"description": "Icons.arrow_forward"
	},

	"Color": {
		"scope": "lua",
		"prefix": "Color",
		"body": [
			"Color('#ffffffff')"
		],
		"description": "Color"
	},
	"EdgeInsets.only": {
		"scope": "lua",
		"prefix": "EdgeInsets.only",
		"body": [
			"EdgeInsets.only({\n\ttop = $1,\n\tleft = $2,\n\tbottom = $3,\n\tright = $4\n})"
		],
		"description": "EdgeInsets.only"
	},
	"EdgeInsets.all": {
		"scope": "lua",
		"prefix": "EdgeInsets.all",
		"body": [
			"EdgeInsets.all($1)"
		],
		"description": "EdgeInsets.all"
	},
	"sp()": {
		"scope": "lua",
		"prefix": "sp()",
		"body": [
			"sp($1)"
		],
		"description": "sp()"
	},
	"Border:new": {
		"scope": "lua",
		"prefix": "Border:new",
		"body": [
			"Border:new({\n\ttop = $1,\n\tbottom = $2,\n\tleft = $3,\n\tright = $4\n})"
		],
		"description": "Border:new"
	},
	"Border.all": {
		"scope": "lua",
		"prefix": "Border:all",
		"body": [
			"Border.all({\n\twidth = $1,\n\tcolor = $2\n})"
		],
		"description": "Border:new"
	},
	"BoxDecoration:new": {
		"scope": "lua",
		"prefix": "BoxDecoration:new",
		"body": [
			"BoxDecoration:new({\n\tcolor = $1,\n\tborderRadius = $2,\n\tborder = $3,\n\timage = $4,\n})"
		],
		"description": "BoxDecoration:new"
	},
	"DecorationImage:new": {
		"scope": "lua",
		"prefix": "DecorationImage:new",
		"body": [
			"DecorationImage:new({\n\timage = $1,\n\tfit = $2})"
		],
		"description": "DecorationImage:new"
	},
	"BorderRadius.only": {
		"scope": "lua",
		"prefix": "BorderRadius.only",
		"body": [
			"BorderRadius.only({\n\ttopLeft = $1,\n\ttopRight = $2,\n\tbottomLeft = $3,\n\tbottomRight = $4})"
		],
		"description": "BorderRadius.only"
	},
	"BorderRadius.all": {
		"scope": "lua",
		"prefix": "BorderRadius.all",
		"body": [
			"BorderRadius.all($1)"
		],
		"description": "BorderRadius.all"
	},
	"Container:new": {
		"scope": "lua",
		"prefix": "Container:new",
		"body": [
			"Container:new({\n\tchild = $1,\n\tmargin = $2,\n\tpadding = $3,\n\tdecoration = $4,\n\tforegroundDecoration = nil$5,\n\talignment = nil$6\n})"
		],
		"description": "Container:new"
	},
	"Center:new": {
		"scope": "lua",
		"prefix": "Center:new",
		"body": [
			"Center:new({\n\tchild = $1,\n\twidthFactor = $2,\n\theightFactor = $3\n})"
		],
		"description": "Center:new"
	},
	"SafeArea:new": {
		"scope": "lua",
		"prefix": "SafeArea:new",
		"body": [
			"SafeArea:new({\n\tchild = $1\n})"
		],
		"description": "SafeArea:new"
	},
	"Matrix4.skew": {
		"scope": "lua",
		"prefix": "Matrix4.skew",
		"body": [
			"Matrix4.skew({\n\talpha = $1,\n\tbeta = $2})"
		],
		"description": "Matrix4.skew"
	},
	"Matrix4.skewX": {
		"scope": "lua",
		"prefix": "Matrix4.skewX",
		"body": [
			"Matrix4.skewX({\n\talpha = $1})"
		],
		"description": "Matrix4.skewX"
	},
	"Matrix4.skewY": {
		"scope": "lua",
		"prefix": "Matrix4.skewY",
		"body": [
			"Matrix4.skewY({\n\tbeta = $1})"
		],
		"description": "Matrix4.skewY"
	},
	"Matrix4.diagonal3Values": {
		"scope": "lua",
		"prefix": "Matrix4.diagonal3Values",
		"body": [
			"Matrix4.diagonal3Values({\n\tx = $1,\n\ty = $2,\n\tz = $3})"
		],
		"description": "Matrix4.diagonal3Values"
	},
	"Matrix4.rotationX": {
		"scope": "lua",
		"prefix": "Matrix4.rotationX",
		"body": [
			"Matrix4.rotationX($1)"
		],
		"description": "Matrix4.rotationX"
	},
	"Matrix4.rotationY": {
		"scope": "lua",
		"prefix": "Matrix4.rotationY",
		"body": [
			"Matrix4.rotationY($1)"
		],
		"description": "Matrix4.rotationY"
	},
	"Matrix4.rotationZ": {
		"scope": "lua",
		"prefix": "Matrix4.rotationZ",
		"body": [
			"Matrix4.rotationZ($1)"
		],
		"description": "Matrix4.rotationZ"
	},
	"Matrix4.translationValues": {
		"scope": "lua",
		"prefix": "Matrix4.translationValues",
		"body": [
			"Matrix4.translationValues({x = $1,y = $2,z = $3})"
		],
		"description": "Matrix4.translationValues"
	},
	"Matrix4.solve": {
		"scope": "lua",
		"prefix": "Matrix4.solve",
		"body": [
			"Matrix4.solve({A = $1,x = $2,b = $3})"
		],
		"description": "Matrix4.solve"
	},
	"Stack:new": {
		"scope": "lua",
		"prefix": "Stack:new",
		"body": [
			"Stack:new({\n\tchildren = $1,\n\talignment = Alignment.topLeft$2\n})"
		],
		"description": "Stack:new"
	},
	"PageView:new": {
		"scope": "lua",
		"prefix": "PageView:new",
		"body": [
			"PageView:new({\n\tchildren = $1,\n\tcontroller = $2,\n\tonPageChanged = $3\n})"
		],
		"description": "PageView:new"
	},
	"Visibility:new": {
		"scope": "lua",
		"prefix": "Visibility:new",
		"body": [
			"Visibility:new({\n\tchild = $1,\n\tvisible = true$2\n})"
		],
		"description": "Visibility:new"
	},
	"BouncingScrollPhysics()": {
		"scope": "lua",
		"prefix": "BouncingScrollPhysics()",
		"body": [
			"BouncingScrollPhysics({\n\tparent = $1\n})"
		],
		"description": "BouncingScrollPhysics()"
	},
	"ClampingScrollPhysics()": {
		"scope": "lua",
		"prefix": "ClampingScrollPhysics()",
		"body": [
			"ClampingScrollPhysics({\n\tparent = $1\n})"
		],
		"description": "ClampingScrollPhysics()"
	},
	"NeverScrollableScrollPhysics()": {
		"scope": "lua",
		"prefix": "NeverScrollableScrollPhysics()",
		"body": [
			"NeverScrollableScrollPhysics({\n\tparent = $1\n})"
		],
		"description": "NeverScrollableScrollPhysics()"
	},
	"AlwaysScrollableScrollPhysics()": {
		"scope": "lua",
		"prefix": "AlwaysScrollableScrollPhysics()",
		"body": [
			"AlwaysScrollableScrollPhysics({\n\tparent = $1\n})"
		],
		"description": "AlwaysScrollableScrollPhysics()"
	},
	"PageController()": {
		"scope": "lua",
		"prefix": "PageController()",
		"body": [
			"PageController({\n\tinitialPage = 0,\n\tkeepPage = true,\n\tviewportFraction = 1\n})"
		],
		"description": "PageController()"
	},
	"PageJumpToPage()": {
		"scope": "lua",
		"prefix": "PageJumpToPage()",
		"body": [
			"PageJumpToPage(controller$1,1$2)"
		],
		"description": "PageJumpToPage()"
	},
	"PageJumpTo()": {
		"scope": "lua",
		"prefix": "PageJumpTo()",
		"body": [
			"PageJumpTo(controller$1,1$2)"
		],
		"description": "PageJumpTo()"
	},
	"Positioned:new":{
		"scope": "lua",
		"prefix": "Positioned:new",
		"body": [
			"Positioned:new({\n\tchild = $1,\n\tleft = $2,\n\ttop = $3,\n\tright = $4,\n\tbottom = $5,\n\twidth = $6,\n\theight = $7\n})"
		],
		"description": "Positioned:new"
	},
	"width =": {
		"scope": "lua",
		"prefix": "width =",
		"body": [
			"width ="
		],
		"description": "width ="
	},
	"height =": {
		"scope": "lua",
		"prefix": "height =",
		"body": [
			"height ="
		],
		"description": "height ="
	},
	"margin =": {
		"scope": "lua",
		"prefix": "margin =",
		"body": [
			"margin ="
		],
		"description": "margin ="
	},
	"padding =": {
		"scope": "lua",
		"prefix": "padding =",
		"body": [
			"padding ="
		],
		"description": "padding ="
	},
	"decoration =": {
		"scope": "lua",
		"prefix": "decoration =",
		"body": [
			"decoration ="
		],
		"description": "decoration ="
	},
	"color =": {
		"scope": "lua",
		"prefix": "color =",
		"body": [
			"color ="
		],
		"description": "color ="
	},
	"ElevatedButton:new": {
		"scope": "lua",
		"prefix": "ElevatedButton:new",
		"body": [
			"ElevatedButton:new({\n\tchild = $1,\n\tonPressed = $2,\n\tonLongPress = $3\n})"
		],
		"description": "ElevatedButton:new"
	},
	"GestureDetector:new": {
		"scope": "lua",
		"prefix": "GestureDetector:new",
		"body": [
			"GestureDetector:new({\n\tchild = $1,\n\tonTap = $2,\n\tonDoubleTap = $3\n})"
		],
		"description": "GestureDetector:new"
	},
	"IconButton:new": {
		"scope": "lua",
		"prefix": "IconButton:new",
		"body": [
			"IconButton:new({\n\ticon = $1,\n\ticonSize = $2,\n\tonPressed = $3\n})"
		],
		"description": "IconButton:new"
	},
	"onDoubleTap =": {
		"scope": "lua",
		"prefix": "onDoubleTap =",
		"body": [
			"onDoubleTap = function()",
			"   $1",
			"end"
		],
		"description": "onDoubleTap ="
	},
	"onTap =": {
		"scope": "lua",
		"prefix": "onTap =",
		"body": [
			"onTap = function()",
			"   $1",
			"end$0"
		],
		"description": "onTap ="
	},
	"Icon:new": {
		"scope": "lua",
		"prefix": "Icon:new",
		"body": [
			"Icon:new({$1,\n\tsize = $2,\n\tcolor = $3\n})"
		],
		"description": "Icon:new"
	},
	"Image.asset": {
		"scope": "lua",
		"prefix": "Image.asset",
		"body": [
			"Image.asset($1,{\n\twidth = $2,\n\theight = $3,\n\tfit = $4\n})"
		],
		"description": "Image.asset"
	},
	"Image.file": {
		"scope": "lua",
		"prefix": "Image.file",
		"body": [
			"Image.file($1,{\n\twidth = $2,\n\theight = $3,\n\tfit = $4\n})"
		],
		"description": "Image.file"
	},
	"Image.network": {
		"scope": "lua",
		"prefix": "Image.network",
		"body": [
			"Image.network($1,{\n\twidth = $2,\n\theight = $3,\n\tfit = $4\n})"
		],
		"description": "Image.network"
	},
	"FittedBox:new":{
		"scope": "lua",
		"prefix": "FittedBox:new",
		"body": [
			"FittedBox:new({\n\tchild = $1,\n\tfit = $2,\n\talignment = $3\n})"
		],
		"description": "FittedBox:new"
	},
	"InkWell:new": {
		"scope": "lua",
		"prefix": "InkWell:new",
		"body": [
			"InkWell:new({\n\tchild = $1,\n\tonTap = $2,\n\tonDoubleTap = $3\n})"
		],
		"description": "InkWell:new"
	},
	"Scaffold:new": {
		"scope": "lua",
		"prefix": "Scaffold:new",
		"body": [
			"Scaffold:new({\n\tbody = $1,\n\tappBar = $2\n})"
		],
		"description": "Scaffold:new"
	},
	"Text:new": {
		"scope": "lua",
		"prefix": "Text:new",
		"body": [
			"Text:new($1,{\n\ttextAlign = TextAlign.left,\n\tstyle = {\n\t\tfontSize = sp(20),\n\t\tfontWeight = FontWeight.w400,\n\t\tcolor = Color('#fff')\n\t}\n})"
		],
		"description": "Text:new"
	},
	"TextAlign.left": {
		"scope": "lua",
		"prefix": "TextAlign.left",
		"body": [
			"TextAlign.left"
		],
		"description": "TextAlign.left"
	},
	"TextAlign.right": {
		"scope": "lua",
		"prefix": "TextAlign.right",
		"body": [
			"TextAlign.right"
		],
		"description": "TextAlign.right"
	},
	"TextAlign.center": {
		"scope": "lua",
		"prefix": "TextAlign.center",
		"body": [
			"TextAlign.center"
		],
		"description": "TextAlign.center"
	},
	"TextAlign.justify": {
		"scope": "lua",
		"prefix": "TextAlign.justify",
		"body": [
			"TextAlign.justify"
		],
		"description": "TextAlign.justify"
	},
	"TextAlign.start": {
		"scope": "lua",
		"prefix": "TextAlign.start",
		"body": [
			"TextAlign.start"
		],
		"description": "TextAlign.start"
	},
	"TextAlign.end": {
		"scope": "lua",
		"prefix": "TextAlign.end",
		"body": [
			"TextAlign.end"
		],
		"description": "TextAlign.end"
	},
	
	"CommonStatefulWidget:new": {
		"scope": "lua",
		"prefix": "CommonStatefulWidget:new",
		"body": [
			"CommonStatefulWidget:new({\n\twidgetName = $1,\n\tpath = $2\n})"
		],
		"description": "CommonStatefulWidget:new"
	},
	"CommonStatelessWidget:new": {
		"scope": "lua",
		"prefix": "CommonStatelessWidget:new",
		"body": [
			"CommonStatelessWidget:new({\n\twidgetName = $1,\n\tpath = $2\n})"
		],
		"description": "CommonStatelessWidget:new"
	},
	".initState()": {
		"scope": "lua",
		"prefix": ".initState()",
		"body": [
			".initState()"
		],
		"description": ".initState()"
	},
	".build()": {
		"scope": "lua",
		"prefix": ".build()",
		"body": [
			".build()"
		],
		"description": ".build()"
	},
	".dispose()": {
		"scope": "lua",
		"prefix": ".dispose()",
		"body": [
			".dispose()"
		],
		"description": ".dispose()"
	},
	".didUpdateWidget()": {
		"scope": "lua",
		"prefix": ".didUpdateWidget()",
		"body": [
			".didUpdateWidget(oldWidget)"
		],
		"description": ".didUpdateWidget()"
	},
	".didChangeDependencies()": {
		"scope": "lua",
		"prefix": ".didChangeDependencies()",
		"body": [
			".didChangeDependencies()"
		],
		"description": ".didChangeDependencies()"
	},
	".init()": {
		"scope": "lua",
		"prefix": ".init()",
		"body": [
			".init()"
		],
		"description": ".init()"
	},
	".encode()": {
		"scope": "lua",
		"prefix": ".encode()",
		"body": [
			".encode($1)"
		],
		"description": ".encode()"
	},
	".decode()": {
		"scope": "lua",
		"prefix": ".decode()",
		"body": [
			".decode($1)"
		],
		"description": ".decode()"
	
	},
	"fontFamily = ": {
		"scope": "lua",
		"prefix": "fontFamily = ",
		"body": [
			"fontFamily = $1"
		],
		"description": "fontFamily = "
	},
	"stl": {
		"scope": "lua",
		"prefix": "stl",
		"body": [
			"stl$1 = {}\nfunction stl$2.init()\n\nend\nfunction stl$3.build(ctx)\n\treturn nil\nend\nreturn stl$4\n"
		],
		"description": "stl"
	},
	"stf": {
		"scope": "lua",
		"prefix": "stf",
		"body": [
			"stf$1 = {}\nfunction stf$2.initState(_state,_tickerProvider)\n\nend\nfunction stf$3.build(ctx)\n\treturn nil\nend\nfunction stf$3.dispose()\n\nend\nreturn stf$4\n"
		],
		"description": "stf"
	},
	"navPush()": {
		"scope": "lua",
		"prefix": "navPush()",
		"body": [
			"navPush({\n\tctx = $1,\n\twidget = $2\n})"
		],
		"description": "navPush()"
	},
	"AnimationStatusListenerAdd()": {
		"scope": "lua",
		"prefix": "AnimationStatusListenerAdd()",
		"body": [
			"local listener = AnimationStatusListenerAdd({\n\tcontroller = $1,\n\tlistener = function(status)\n\tend\n})"
		],
		"description": "AnimationStatusListenerAdd()"
	},
	"AnimationStatusListenerRemove()": {
		"scope": "lua",
		"prefix": "AnimationStatusListenerRemove()",
		"body": [
			"AnimationStatusListenerRemove({\n\tcontroller = $1,\n\tlistener = $2\n})"
		],
		"description": "AnimationStatusListenerRemove()"
	},
	"AnimationControllerForward()": {
		"scope": "lua",
		"prefix": "AnimationControllerForward()",
		"body": [
			"AnimationControllerForward({\n\tcontroller = $1,\n\tfrom = nil$2\n})"
		],
		"description": "AnimationControllerForward()"
	},
	"AnimationControllerReverse()": {
		"scope": "lua",
		"prefix": "AnimationControllerReverse()",
		"body": [
			"AnimationControllerReverse({\n\tcontroller = $1,\n\tfrom = nil$2\n})"
		],
		"description": "AnimationControllerReverse()"
	},
	"AnimationControllerStop()": {
		"scope": "lua",
		"prefix": "AnimationControllerStop()",
		"body": [
			"AnimationControllerStop({\n\tcontroller = $1,\n\tcanceled = true$2\n})"
		],
		"description": "AnimationControllerStop()"
	},
	"CurvedAnimation()": {
		"scope": "lua",
		"prefix": "CurvedAnimation()",
		"body": [
			"CurvedAnimation({\n\tparent = $1,\n\tcurve = $2,\n\treverseCurve = nil$3\n})"
		],
		"description": "CurvedAnimation()"
	},
	"AnimationControllerReset()": {
		"scope": "lua",
		"prefix": "AnimationControllerReset()",
		"body": [
			"AnimationControllerReset({\n\tcontroller = $1\n})"
		],
		"description": "AnimationControllerReset()"
	},
	"AnimationControllerResync()": {
		"scope": "lua",
		"prefix": "AnimationControllerResync()",
		"body": [
			"AnimationControllerResync({\n\tcontroller = $1,\n\tvsync = $2\n})"
		],
		"description": "AnimationControllerResync()"
	},
	"navPop()": {
		"scope": "lua",
		"prefix": "navPop()",
		"body": [
			"navPop({\n\tctx = $1\n})"
		],
		"description": "navPop()"
	},
	"navReplaceAndRemoveAll()": {
		"scope": "lua",
		"prefix": "navReplaceAndRemoveAll()",
		"body": [
			"navReplaceAndRemoveAll({\n\tctx = $1,\n\twidget = $2\n})"
		],
		"description": "navReplaceAndRemoveAll()"
	},
	"navReplace()": {
		"scope": "lua",
		"prefix": "navReplace()",
		"body": [
			"navReplace({\n\tctx = $1,\n\twidget = $2\n})"
		],
		"description": "navReplace()"
	},
	"ScrollController()": {
		"scope": "lua",
		"prefix": "ScrollController()",
		"body": [
			"ScrollController({\n\tinitialScrollOffset = 0$1,\n\tkeepScrollOffset = true$2,\n\tdebugLabel = $3\n})"
		],
		"description": "ScrollController()"
	},
	"AnimationController()": {
		"scope": "lua",
		"prefix": "AnimationController()",
		"body": [
			"AnimationController({\n\tdurationMilliseconds = 500$1,\n\tvsync = $2\n})"
		],
		"description": "AnimationController()"
	},
	"GlobalKey()": {
		"scope": "lua",
		"prefix": "GlobalKey()",
		"body": [
			"GlobalKey({\n\tdebugLabel = nil$1\n})"
		],
		"description": "GlobalKey()"
	},
	"SliverGridDelegateWithFixedCrossAxisCount()": {
		"scope": "lua",
		"prefix": "SliverGridDelegateWithFixedCrossAxisCount()",
		"body": [
			"SliverGridDelegateWithFixedCrossAxisCount({\n\tcrossAxisCount = $1,\n\tchildAspectRatio = 1.0$2,\n\tmainAxisSpacing = 0.0$3,\n\tcrossAxisSpacing = 0.0$4,\n\tmainAxisExtent = nil$5\n})"
		],
		"description": "SliverGridDelegateWithFixedCrossAxisCount()"
	},
	"SliverChildBuilderDelegate()": {
		"scope": "lua",
		"prefix": "SliverChildBuilderDelegate()",
		"body": [
			"SliverChildBuilderDelegate({\n\tbuilder = function (_ctx,index)\n\treturn null\nend$1\n,\n\tchildCount = nil$2,\n\taddAutomaticKeepAlives = true$3,\n\taddRepaintBoundaries = true$4,\n\taddSemanticIndexes = true$5,\n\tsemanticIndexOffset = 0$6,\n\tsemanticIndexOffset = 0$7,\n\tsemanticIndexCallback = function(w,index)\nreturn 0\n\tend\n})"
		],
		"description": "SliverChildBuilderDelegate()"
	},
	"ListView:new": {
		"scope": "lua",
		"prefix": "ListView:new()",
		"body": [
			"ListView:new({\n\tscrollDirection = Axis.vertical$1,\n\treverse = false$2,",
			"\tcontroller = nil$3,",
			"\tprimary = false$4,",
			"\tphysics = nil$4,",
			"\tshrinkWrap = false$5,",
			"\tpadding = nil$6,",
			"\taddAutomaticKeepAlives = true$7,",
			"\taddRepaintBoundaries = true$8,",
			"\taddSemanticIndexes = true$9,",
			"\tcacheExtent = nil$10,",
			"\tchildren = {}$11,",
			"\tsemanticChildCount = nil$12,",
			"\tdragStartBehavior = DragStartBehavior.start$13,",
			"\tkeyboardDismissBehavior = ScrollViewKeyboardDismissBehavior.manual$14,",
			"\trestorationId = nil$14,",
			"\tclipBehavior = Clip.hardEdge$15",
			"})"
		],
		"description": "ListView:new()"
	},
	"ListView:builder": {
		"scope": "lua",
		"prefix": "ListView:builder()",
		"body": [
			"ListView:builder({\n\tscrollDirection = Axis.vertical$1,\n\treverse = false$2,",
			"\tcontroller = nil$3,",
			"\tprimary = false$4,",
			"\tphysics = nil$16,",
			"\tshrinkWrap = false$5,",
			"\tpadding = nil$6,",
			"\taddAutomaticKeepAlives = true$7,",
			"\taddRepaintBoundaries = true$8,",
			"\taddSemanticIndexes = true$9,",
			"\tcacheExtent = nil$10,",
			"\titemBuilder = function (_ctx,index)--item Widget builder \n\t\treturn\n\tend$11,",
			"\titemCount = nil$16,",
			"\tsemanticChildCount = nil$12,",
			"\tdragStartBehavior = DragStartBehavior.start$13,",
			"\tkeyboardDismissBehavior = ScrollViewKeyboardDismissBehavior.manual$14,",
			"\trestorationId = nil$14,",
			"\tclipBehavior = Clip.hardEdge$15",
			"})"
		],
		"description": "ListView:builder()"
	},
	"ListView:separated": {
		"scope": "lua",
		"prefix": "ListView:separated()",
		"body": [
			"ListView:separated({\n\tscrollDirection = Axis.vertical$1,\n\treverse = false$2,",
			"\tcontroller = nil$3,",
			"\tprimary = false$4,",
			"\tphysics = nil$16,",
			"\tshrinkWrap = false$5,",
			"\tpadding = nil$6,",
			"\taddAutomaticKeepAlives = true$7,",
			"\taddRepaintBoundaries = true$8,",
			"\taddSemanticIndexes = true$9,",
			"\tcacheExtent = nil$10,",
			"\titemBuilder = function (_ctx,index)--item Widget builder \n\t\treturn\n\tend$11,",
			"\tseparatorBuilder = function (_ctx,index)--item Widget builder \n\t\treturn\n\tend$11,",
			"\titemCount = nil$16,",
			"\tsemanticChildCount = nil$12,",
			"\tdragStartBehavior = DragStartBehavior.start$13,",
			"\tkeyboardDismissBehavior = ScrollViewKeyboardDismissBehavior.manual$14,",
			"\trestorationId = nil$14,",
			"\tclipBehavior = Clip.hardEdge$15",
			"})"
		],
		"description": "ListView:builder()"
	},
	"ListView:custom": {
		"scope": "lua",
		"prefix": "ListView:custom()",
		"body": [
			"ListView:custom({",
			"\tscrollDirection = Axis.vertical$1,",
			"\treverse = false$2,",
			"\tcontroller = nil$3,",
			"\tprimary = false$4,",
			"\tphysics = nil$16,",
			"\tshrinkWrap = false$5,",
			"\tpadding = nil$6,",
			"\tchildrenDelegate = SliverChildBuilderDelegate(function(_ctx,index)--返回item Widget",
			"\t\treturn nil",
			"\tend,{",
			"\t\tchildCount = nil,",
			"\t\taddAutomaticKeepAlives = true,",
			"\t\taddRepaintBoundaries = true,",
			"\t\taddSemanticIndexes = true,",
			"\t\tsemanticIndexOffset = 0,",
			"\t\tsemanticIndexCallback = function(w,index)--返回semantic index",
			"\t\t\treturn nil",
			"\t\tend",
			"\t}),",
			"\titemExtent = nil$8,",
			"\tprototypeItem = nil$9,",
			"\tcacheExtent = nil$10,",
			"\tsemanticChildCount = nil$12,",
			"\tdragStartBehavior = DragStartBehavior.start$13,",
			"\tkeyboardDismissBehavior = ScrollViewKeyboardDismissBehavior.manual$14,",
			"\trestorationId = nil$14,",
			"\tclipBehavior = Clip.hardEdge$15",
			"})"
		],
		"description": "ListView:custom()"
	},
	"GridView:builder": {
		"scope": "lua",
		"prefix": "GridView:builder()",
		"body": [
			"GridView:builder({",
			"\tscrollDirection = Axis.vertical$1,",
			"\treverse = false$2,",
			"\tcontroller = nil$3,",
			"\tprimary = false$4,",
			"\tphysics = nil$16,",
			"\tshrinkWrap = false$5,",
			"\tpadding = nil$6,",
			"\tgridDelegate = nil$18,",
			"\titemBuilder = function (_ctx,index)--item Widget builder \n\t\treturn\n\tend$11,",
			"\titemCount = nil$16,",
			"\taddAutomaticKeepAlives = true$7,",
			"\taddRepaintBoundaries = true$8,",
			"\taddSemanticIndexes = true$9,",
			"\tcacheExtent = nil$10,",
			"\tsemanticChildCount = nil$12,",
			"\tdragStartBehavior = DragStartBehavior.start$13,",
			"\tkeyboardDismissBehavior = ScrollViewKeyboardDismissBehavior.manual$14,",
			"\trestorationId = nil$14,",
			"\tclipBehavior = Clip.hardEdge$15",
			"})"
		],
		"description": "GridView:builder()"
	},
	"CommonOverScrollBehaviorWidget()": {
		"scope": "lua",
		"prefix": "CommonOverScrollBehaviorWidget()",
		"body": [
			"CommonOverScrollBehaviorWidget({\n\tchild = $1\n})"
		],
		"description": "CommonOverScrollBehaviorWidget()"
	},
	"Helper:md5()": {
		"scope": "lua",
		"prefix": "Helper:md5()",
		"body": [
			"Helper:md5($1)"
		],
		"description": "Helper:md5()"
	},
	"Helper:aesEncode()": {
		"scope": "lua",
		"prefix": "Helper:aesEncode()",
		"body": [
			"Helper:aesEncode({key = $1,iv = $2,content = $3})",
		],
		"description": "Helper:aesEncode()"
	},
	"Helper:aseDecode()": {
		"scope": "lua",
		"prefix": "Helper:aseDecode()",
		"body": [
			"Helper:aseDecode({key = $1,iv = $2,content = $3})",
		],
		"description": "Helper:aseDecode()"
	},
	"Helper:setOrientations()": {
		"scope": "lua",
		"prefix": "Helper:setOrientations()",
		"body": [
			"Helper:setOrientations({$1})",
		],
		"description": "Helper:setOrientations()"
	},
	"Helper:setEnabledSystemUIMode()": {
		"scope": "lua",
		"prefix": "Helper:setEnabledSystemUIMode()",
		"body": [
			"Helper:setEnabledSystemUIMode(SystemUiMode.manual,{overlays = {}})",
		],
		"description": "Helper:setEnabledSystemUIMode()"
	},
	"SystemUiOverlay.top": {
		"scope": "lua",
		"prefix": "SystemUiOverlay.top",
		"body": [
			"SystemUiOverlay.top",
		],
		"description": "SystemUiOverlay.top"
	},
	"SystemUiOverlay.bottom": {
		"scope": "lua",
		"prefix": "SystemUiOverlay.bottom",
		"body": [
			"SystemUiOverlay.bottom",
		],
		"description": "SystemUiOverlay.bottom"
	},
	"SystemUiMode.leanBack": {
		"scope": "lua",
		"prefix": "SystemUiMode.leanBack",
		"body": [
			"SystemUiMode.leanBack",
		],
		"description": "SystemUiMode.leanBack"
	},
	"SystemUiMode.immersive": {
		"scope": "lua",
		"prefix": "SystemUiMode.immersive",
		"body": [
			"SystemUiMode.immersive",
		],
		"description": "SystemUiMode.immersive"
	},
	"SystemUiMode.immersiveSticky": {
		"scope": "lua",
		"prefix": "SystemUiMode.immersiveSticky",
		"body": [
			"SystemUiMode.immersiveSticky",
		],
		"description": "SystemUiMode.immersiveSticky"
	},
	"SystemUiMode.edgeToEdge": {
		"scope": "lua",
		"prefix": "SystemUiMode.edgeToEdge",
		"body": [
			"SystemUiMode.edgeToEdge",
		],
		"description": "SystemUiMode.edgeToEdge"
	},
	"SystemUiMode.manual": {
		"scope": "lua",
		"prefix": "SystemUiMode.manual",
		"body": [
			"SystemUiMode.manual",
		],
		"description": "SystemUiMode.manual"
	},
	"Helper.appMode": {
		"scope": "lua",
		"prefix": "Helper.appMode",
		"body": [
			"Helper.appMode",
		],
		"description": "Helper.appMode"
	},
	"Helper.appPltform": {
		"scope": "lua",
		"prefix": "Helper.appPltform",
		"body": [
			"Helper.appPltform",
		],
		"description": "Helper.appPltform"
	},
	"DeviceOrientation.portraitUp": {
		"scope": "lua",
		"prefix": "DeviceOrientation.portraitUp",
		"body": [
			"DeviceOrientation.portraitUp",
		],
		"description": "DeviceOrientation.portraitUp"
	},
	"DeviceOrientation.landscapeLeft": {
		"scope": "lua",
		"prefix": "DeviceOrientation.landscapeLeft",
		"body": [
			"DeviceOrientation.landscapeLeft",
		],
		"description": "DeviceOrientation.landscapeLeft"
	},
	"DeviceOrientation.portraitDown": {
		"scope": "lua",
		"prefix": "DeviceOrientation.portraitDown",
		"body": [
			"DeviceOrientation.portraitDown",
		],
		"description": "DeviceOrientation.portraitDown"
	},
	"DeviceOrientation.landscapeRight": {
		"scope": "lua",
		"prefix": "DeviceOrientation.landscapeRight",
		"body": [
			"DeviceOrientation.landscapeRight",
		],
		"description": "DeviceOrientation.landscapeRight"
	},
	"Curves.linear": {
		"scope": "lua",
		"prefix": "Curves.linear",
		"body": [
			"Curves.linear",
		],
		"description": "Curves.linear"
	},
	"Curves.decelerate": {
		"scope": "lua",
		"prefix": "Curves.decelerate",
		"body": [
			"Curves.decelerate",
		],
		"description": "Curves.decelerate"
	},
	"Curves.bounceIn": {
		"scope": "lua",
		"prefix": "Curves.bounceIn",
		"body": [
			"Curves.bounceIn",
		],
		"description": "Curves.bounceIn"
	},
	"Curves.bounceInOut": {
		"scope": "lua",
		"prefix": "Curves.bounceInOut",
		"body": [
			"Curves.bounceInOut",
		],
		"description": "Curves.bounceInOut"
	},
	"Curves.bounceOut": {
		"scope": "lua",
		"prefix": "Curves.bounceOut",
		"body": [
			"Curves.bounceOut",
		],
		"description": "Curves.bounceOut"
	},
	"Curves.ease": {
		"scope": "lua",
		"prefix": "Curves.ease",
		"body": [
			"Curves.ease",
		],
		"description": "Curves.ease"
	},
	"Curves.easeIn": {
		"scope": "lua",
		"prefix": "Curves.easeIn",
		"body": [
			"Curves.easeIn",
		],
		"description": "Curves.linear"
	},
	"Curves.easeInBack": {
		"scope": "lua",
		"prefix": "Curves.easeInBack",
		"body": [
			"Curves.easeInBack",
		],
		"description": "Curves.linear"
	},
	"Curves.easeInCirc": {
		"scope": "lua",
		"prefix": "Curves.easeInCirc",
		"body": [
			"Curves.easeInCirc",
		],
		"description": "Curves.easeInCirc"
	},
	"Curves.easeInCubic": {
		"scope": "lua",
		"prefix": "Curves.easeInCubic",
		"body": [
			"Curves.easeInCubic",
		],
		"description": "Curves.easeInCubic"
	},
	"Curves.easeInExpo": {
		"scope": "lua",
		"prefix": "Curves.easeInExpo",
		"body": [
			"Curves.easeInExpo",
		],
		"description": "Curves.easeInExpo"
	},
	"Curves.easeInOut": {
		"scope": "lua",
		"prefix": "Curves.easeInOut",
		"body": [
			"Curves.easeInOut",
		],
		"description": "Curves.easeInOut"
	},
	"Curves.easeInOutBack": {
		"scope": "lua",
		"prefix": "Curves.easeInOutBack",
		"body": [
			"Curves.easeInOutBack",
		],
		"description": "Curves.easeInOutBack"
	},
	"Curves.easeInOutCirc": {
		"scope": "lua",
		"prefix": "Curves.easeInOutCirc",
		"body": [
			"Curves.easeInOutCirc",
		],
		"description": "Curves.easeInOutCirc"
	},
	"Curves.easeInOutCubic": {
		"scope": "lua",
		"prefix": "Curves.easeInOutCubic",
		"body": [
			"Curves.easeInOutCubic",
		],
		"description": "Curves.easeInOutCubic"
	},
	"Curves.easeInOutCubicEmphasized": {
		"scope": "lua",
		"prefix": "Curves.easeInOutCubicEmphasized",
		"body": [
			"Curves.easeInOutCubicEmphasized",
		],
		"description": "Curves.easeInOutCubicEmphasized"
	},
	"Curves.easeInOutExpo": {
		"scope": "lua",
		"prefix": "Curves.easeInOutExpo",
		"body": [
			"Curves.easeInOutExpo",
		],
		"description": "Curves.easeInOutExpo"
	},
	"Curves.easeInOutQuad": {
		"scope": "lua",
		"prefix": "Curves.easeInOutQuad",
		"body": [
			"Curves.easeInOutQuad",
		],
		"description": "Curves.easeInOutQuad"
	},

	"Curves.easeInOutSine": {
		"scope": "lua",
		"prefix": "Curves.easeInOutSine",
		"body": [
			"Curves.easeInOutSine",
		],
		"description": "Curves.easeInOutSine"
	},
	"Curves.easeInQuad": {
		"scope": "lua",
		"prefix": "Curves.easeInQuad",
		"body": [
			"Curves.easeInQuad",
		],
		"description": "Curves.easeInQuad"
	},
	"Curves.easeInQuart": {
		"scope": "lua",
		"prefix": "Curves.easeInQuart",
		"body": [
			"Curves.easeInQuart",
		],
		"description": "Curves.easeInQuart"
	},
	"Curves.easeInOutQuint": {
		"scope": "lua",
		"prefix": "Curves.easeInOutQuint",
		"body": [
			"Curves.easeInOutQuint",
		],
		"description": "Curves.easeInOutQuint"
	},
	"Curves.easeInToLinear": {
		"scope": "lua",
		"prefix": "Curves.easeInToLinear",
		"body": [
			"Curves.easeInToLinear",
		],
		"description": "Curves.easeInToLinear"
	},
	"Curves.easeOut": {
		"scope": "lua",
		"prefix": "Curves.easeOut",
		"body": [
			"Curves.easeOut",
		],
		"description": "Curves.easeOut"
	},
	"Curves.easeOutBack": {
		"scope": "lua",
		"prefix": "Curves.easeOutBack",
		"body": [
			"Curves.easeOutBack",
		],
		"description": "Curves.easeOutBack"
	},
	"Curves.easeOutCirc": {
		"scope": "lua",
		"prefix": "Curves.easeOutCirc",
		"body": [
			"Curves.easeOutCirc",
		],
		"description": "Curves.easeOutCirc"
	},
	"Curves.easeOutCubic": {
		"scope": "lua",
		"prefix": "Curves.easeOutCubic",
		"body": [
			"Curves.easeOutCubic",
		],
		"description": "Curves.easeOutCubic"
	},
	"Curves.easeOutExpo": {
		"scope": "lua",
		"prefix": "Curves.easeOutExpo",
		"body": [
			"Curves.easeOutExpo",
		],
		"description": "Curves.easeOutExpo"
	},
	"Curves.easeOutQuad": {
		"scope": "lua",
		"prefix": "Curves.easeOutQuad",
		"body": [
			"Curves.easeOutQuad",
		],
		"description": "Curves.easeOutQuad"
	},
	"Curves.easeOutQuart": {
		"scope": "lua",
		"prefix": "Curves.easeOutQuart",
		"body": [
			"Curves.easeOutQuart",
		],
		"description": "Curves.easeOutQuart"
	},
	"Curves.easeOutSine": {
		"scope": "lua",
		"prefix": "Curves.easeOutSine",
		"body": [
			"Curves.easeOutSine",
		],
		"description": "Curves.easeOutSine"
	},
	"Curves.elasticIn": {
		"scope": "lua",
		"prefix": "Curves.elasticIn",
		"body": [
			"Curves.elasticIn",
		],
		"description": "Curves.elasticIn"
	},
	"Curves.elasticInOut": {
		"scope": "lua",
		"prefix": "Curves.elasticInOut",
		"body": [
			"Curves.elasticInOut",
		],
		"description": "Curves.elasticInOut"
	},
	"Curves.elasticOut": {
		"scope": "lua",
		"prefix": "Curves.elasticOut",
		"body": [
			"Curves.elasticOut",
		],
		"description": "Curves.elasticOut"
	},
	"Curves.fastLinearToSlowEaseIn": {
		"scope": "lua",
		"prefix": "Curves.fastLinearToSlowEaseIn",
		"body": [
			"Curves.fastLinearToSlowEaseIn",
		],
		"description": "Curves.fastLinearToSlowEaseIn"
	},
	"Curves.linearToEaseOut": {
		"scope": "lua",
		"prefix": "Curves.linearToEaseOut",
		"body": [
			"Curves.linearToEaseOut",
		],
		"description": "Curves.linearToEaseOut"
	},
	"Curves.slowMiddle": {
		"scope": "lua",
		"prefix": "Curves.slowMiddle",
		"body": [
			"Curves.slowMiddle",
		],
		"description": "Curves.slowMiddle"
	}
	




}