{

	"Align:new": {
		"scope": "lua",
		"prefix": "Align",
		"body": [
			"Align:new({\n\tchild = $1,\n\talignment = $2\n})"
		],
		"description": "Align:new"
	},
	"Alignment:new": {
		"scope": "lua",
		"prefix": "Alignment:new",
		"body": [
			"Alignment:new({\n\tx = $1,\n\ty = $2\n})"
		],
		"description": "Alignment:new"
	},
	"Alignment.topLeft": {
		"scope": "lua",
		"prefix": "Alignment.topLeft",
		"body": [
			"Alignment.topLeft"
		],
		"description": "Alignment.topLeft"
	},
	"Alignment.topCenter": {
		"scope": "lua",
		"prefix": "Alignment.topCenter",
		"body": [
			"Alignment.topCenter"
		],
		"description": "Alignment.topCenter"
	},
	"Alignment.topRight": {
		"scope": "lua",
		"prefix": "Alignment.topRight",
		"body": [
			"Alignment.topRight"
		],
		"description": "Alignment.topRight"
	},
	"Alignment.centerLeft": {
		"scope": "lua",
		"prefix": "Alignment.centerLeft",
		"body": [
			"Alignment.centerLeft"
		],
		"description": "Alignment.centerLeft"
	},
	"Alignment.center": {
		"scope": "lua",
		"prefix": "Alignment.center",
		"body": [
			"Alignment.center"
		],
		"description": "Alignment.center"
	},
	"Alignment.centerRight": {
		"scope": "lua",
		"prefix": "Alignment.centerRight",
		"body": [
			"Alignment.centerRight"
		],
		"description": "Alignment.centerRight"
	},
	"Alignment.bottomLeft": {
		"scope": "lua",
		"prefix": "Alignment.bottomLeft",
		"body": [
			"Alignment.bottomLeft"
		],
		"description": "Alignment.bottomLeft"
	},
	"Alignment.bottomCenter": {
		"scope": "lua",
		"prefix": "Alignment.bottomCenter",
		"body": [
			"Alignment.bottomCenter"
		],
		"description": "Alignment.bottomCenter"
	},
	"Alignment.bottomRight": {
		"scope": "lua",
		"prefix": "Alignment.bottomRight",
		"body": [
			"Alignment.bottomRight"
		],
		"description": "Alignment.bottomRight"
	},
	"Axis.horizontal": {
		"scope": "lua",
		"prefix": "Axis.horizontal",
		"body": [
			"Axis.horizontal"
		],
		"description": "Axis.horizontal"
	},
	"Axis.vertical": {
		"scope": "lua",
		"prefix": "Axis.vertical",
		"body": [
			"Axis.vertical"
		],
		"description": "Axis.vertical"
	},
	"AppBar:new": {
		"scope": "lua",
		"prefix": "AppBar:new",
		"body": [
			"AppBar:new({\n\tleading = $1,\n\ttitle = $2,\n\tactions = $3\n})"
		],
		"description": "AppBar:new"
	},
	"asyncFun()": {
		"scope": "lua",
		"prefix": "asyncFun()",
		"body": [
			"asyncFun({\n\ttask = $1,--异步函数task\n\tcomplete = $2--异步then操作\n})"
		],
		"description": "asyncFun() 异步操作"
	},
	"delayFun()": {
		"scope": "lua",
		"prefix": "delayFun()",
		"body": [
			"delayFun({\n\ttask = $1,--异步函数task\n\ttime = $2--延迟执行的毫秒,\n\tcomplete = $3--异步then操作\n})"
		],
		"description": "delayFun() 延迟执行函数"
	},
	"readFile()": {
		"scope": "lua",
		"prefix": "readFile()",
		"body": [
			"readFile({\n\tpath = $1,--文件的绝对路径\n\tasync = true$2,--是否进行异步操作\n\tcallback = function(exists,value)--读取完成的返回exists是否存在，value是读取文件的字符串\n\tend\n})"
		],
		"description": "readFile() 读取文件"
	},
	"existsFile()": {
		"scope": "lua",
		"prefix": "existsFile()",
		"body": [
			"existsFile({\n\tpath = $1,--文件的绝对路径\n\tasync = true$2,--是否进行异步操作\n\tcallback = function(exists)--完成的返回exists是否存在\n\tend\n})"
		],
		"description": "existsFile() 是否存在文件"
	},
	"Helper:showDlg()": {
		"scope": "lua",
		"prefix": "Helper:showDlg()",
		"body": [
			"Helper:showDlg({\n\tchild = $1,--弹框的widget\n\tcontext = ctx$2,--上下文\n\tbarrierDismissible = false$2--点击自动消失\n})"
		],
		"description": "Helper:showDlg() 全局弹框Dlg"
	},
	"saveFile()": {
		"scope": "lua",
		"prefix": "saveFile()",
		"body": [
			"saveFile({\n\tpath = $1,--文件的绝对路径\n\tasync = true$2,--是否进行异步操作\n\tcontent = $2,--将要保存的字符串\n\tcallback = function(flag,msg)--保存的返回值flag是否保存成功，msg保存的提示信息\n\tend$3\n})"
		],
		"description": "saveFile() 保存字符串到文件"
	},
	"deleteFile()": {
		"scope": "lua",
		"prefix": "deleteFile()",
		"body": [
			"deleteFile({\n\tpath = $1,--文件的绝对路径\n\tasync = true$2,--是否进行异步操作\n\trecursive = true,--是否递归操作\n\tcallback = $3--删除完成回调\n})"
		],
		"description": "deleteFile() 删除文件"
	},
	"Column:new": {
		"scope": "lua",
		"prefix": "Column:new",
		"body": [
			"Column:new({\n\tchildren = $1,\n\tmainAxisAlignment = MainAxisAlignment.start$2,\n\tcrossAxisAlignment = CrossAxisAlignment.start$3\n})"
		],
		"description": "Column:new"
	},
	"Row:new": {
		"scope": "lua",
		"prefix": "Row:new",
		"body": [
			"Row:new({\n\tchildren = $1,\n\tmainAxisAlignment = MainAxisAlignment.start$2,\n\tcrossAxisAlignment = CrossAxisAlignment.start$3\n})"
		],
		"description": "Row:new"

	},
	"mainAxisAlignment = ": {
		"scope": "lua",
		"prefix": "mainAxisAlignment = ",
		"body": [
			"mainAxisAlignment = "
		],
		"description": "mainAxisAlignment = "
	},
	"ClipRRect:new": {
		"scope": "lua",
		"prefix": "ClipRRect:new",
		"body": [
			"ClipRRect:new({\n\t\tchild = $1,\n\t\tborderRadius = $2,\n\t\tclipBehavior = $3\n\t})"
		],
		"description": "ClipRRect:new"
	},
	"AspectRatio:new": {
		"scope": "lua",
		"prefix": "AspectRatio:new",
		"body": [
			"AspectRatio:new({\n\tchild = $1,\n\taspectRatio = $2\n})"
		],
		"description": "AspectRatio:new"
	},
	"clipBehavior": {
		"scope": "lua",
		"prefix": "clipBehavior",
		"body": [
			"clipBehavior"
		],
		"description": "clipBehavior"
	},
	"crossAxisAlignment = ": {
		"scope": "lua",
		"prefix": "crossAxisAlignment = ",
		"body": [
			"crossAxisAlignment = "
		],
		"description": "crossAxisAlignment = "
	},
	"FontWeight.w400": {
		"scope": "lua",
		"prefix": "FontWeight.w400",
		"body": [
			"FontWeight.w400"
		],
		"description": "FontWeight.w400"
	},
	"FontWeight.normal": {
		"scope": "lua",
		"prefix": "FontWeight.normal",
		"body": [
			"FontWeight.normal"
		],
		"description": "FontWeight.normal"
	},
	"FontWeight.bold": {
		"scope": "lua",
		"prefix": "FontWeight.bold",
		"body": [
			"FontWeight.bold"
		],
		"description": "FontWeight.bold"
	},
	"StackFit.loose": {
		"scope": "lua",
		"prefix": "StackFit.loose",
		"body": [
			"StackFit.loose"
		],
		"description": "StackFit.loose"
	},
	"StackFit.expand": {
		"scope": "lua",
		"prefix": "StackFit.expand",
		"body": [
			"StackFit.expand"
		],
		"description": "StackFit.expand"
	},
	"StackFit.passthrough": {
		"scope": "lua",
		"prefix": "StackFit.passthrough",
		"body": [
			"StackFit.passthrough"
		],
		"description": "StackFit.passthrough"
	},
	"BoxFit.fill": {
		"scope": "lua",
		"prefix": "BoxFit.fill",
		"body": [
			"BoxFit.fill"
		],
		"description": "BoxFit.fill"
	},
	"BoxFit.contain": {
		"scope": "lua",
		"prefix": "BoxFit.contain",
		"body": [
			"BoxFit.contain"
		],
		"description": "BoxFit.contain"
	},
	"BoxFit.cover": {
		"scope": "lua",
		"prefix": "BoxFit.cover",
		"body": [
			"BoxFit.cover"
		],
		"description": "BoxFit.cover"
	},
	"BoxFit.fitWidth": {
		"scope": "lua",
		"prefix": "BoxFit.fitWidth",
		"body": [
			"BoxFit.fitWidth"
		],
		"description": "BoxFit.fitWidth"
	},
	"BoxFit.fitHeight": {
		"scope": "lua",
		"prefix": "BoxFit.fitHeight",
		"body": [
			"BoxFit.fitHeight"
		],
		"description": "BoxFit.fitHeight"
	},
	"BoxFit.none": {
		"scope": "lua",
		"prefix": "BoxFit.none",
		"body": [
			"BoxFit.none"
		],
		"description": "BoxFit.none"
	},
	"BoxFit.scaleDown": {
		"scope": "lua",
		"prefix": "BoxFit.scaleDown",
		"body": [
			"BoxFit.scaleDown"
		],
		"description": "BoxFit.scaleDown"
	},
	"Clip.none": {
		"scope": "lua",
		"prefix": "Clip.none",
		"body": [
			"Clip.none"
		],
		"description": "Clip.none"
	},
	"Clip.hardEdge": {
		"scope": "lua",
		"prefix": "Clip.hardEdge",
		"body": [
			"Clip.hardEdge"
		],
		"description": "Clip.hardEdge"
	},
	"Clip.antiAlias": {
		"scope": "lua",
		"prefix": "Clip.antiAlias",
		"body": [
			"Clip.antiAlias"
		],
		"description": "Clip.antiAlias"
	},
	"Clip.antiAliasWithSaveLayer": {
		"scope": "lua",
		"prefix": "Clip.antiAliasWithSaveLayer",
		"body": [
			"Clip.antiAliasWithSaveLayer"
		],
		"description": "Clip.antiAliasWithSaveLayer"
	},
	"CrossAxisAlignment.start": {
		"scope": "lua",
		"prefix": "CrossAxisAlignment.start",
		"body": [
			"CrossAxisAlignment.start"
		],
		"description": "CrossAxisAlignment.start"
	},
	"CrossAxisAlignment.bottom": {
		"scope": "lua",
		"prefix": "CrossAxisAlignment.bottom",
		"body": [
			"CrossAxisAlignment.bottom"
		],
		"description": "CrossAxisAlignment.bottom"
	},
	"CrossAxisAlignment.center": {
		"scope": "lua",
		"prefix": "CrossAxisAlignment.center",
		"body": [
			"CrossAxisAlignment.center"
		],
		"description": "CrossAxisAlignment.center"
	},
	"CrossAxisAlignment.stretch": {
		"scope": "lua",
		"prefix": "CrossAxisAlignment.stretch",
		"body": [
			"CrossAxisAlignment.stretch"
		],
		"description": "CrossAxisAlignment.stretch"
	},
	"CrossAxisAlignment.baseline": {
		"scope": "lua",
		"prefix": "CrossAxisAlignment.baseline",
		"body": [
			"CrossAxisAlignment.baseline"
		],
		"description": "CrossAxisAlignment.baseline"
	},
	"MainAxisAlignment.start": {
		"scope": "lua",
		"prefix": "MainAxisAlignment.start",
		"body": [
			"MainAxisAlignment.start"
		],
		"description": "MainAxisAlignment.start"
	},
	"MainAxisAlignment.bottom": {
		"scope": "lua",
		"prefix": "MainAxisAlignment.bottom",
		"body": [
			"MainAxisAlignment.bottom"
		],
		"description": "MainAxisAlignment.bottom"
	},
	"MainAxisAlignment.center": {
		"scope": "lua",
		"prefix": "MainAxisAlignment.center",
		"body": [
			"MainAxisAlignment.center"
		],
		"description": "MainAxisAlignment.center"
	},
	"MainAxisAlignment.spaceBetween": {
		"scope": "lua",
		"prefix": "MainAxisAlignment.spaceBetween",
		"body": [
			"MainAxisAlignment.spaceBetween"
		],
		"description": "MainAxisAlignment.spaceBetween"
	},
	"MainAxisAlignment.spaceAround": {
		"scope": "lua",
		"prefix": "MainAxisAlignment.spaceAround",
		"body": [
			"MainAxisAlignment.spaceAround"
		],
		"description": "MainAxisAlignment.spaceAround"
	},
	"MainAxisAlignment.spaceEvenly": {
		"scope": "lua",
		"prefix": "MainAxisAlignment.spaceEvenly",
		"body": [
			"MainAxisAlignment.spaceEvenly"
		],
		"description": "MainAxisAlignment.spaceEvenly"
	},
	"MainAxisSize.min": {
		"scope": "lua",
		"prefix": "MainAxisSize.min",
		"body": [
			"MainAxisSize.min"
		],
		"description": "MainAxisSize.min"
	},
	"MainAxisSize.max": {
		"scope": "lua",
		"prefix": "MainAxisSize.max",
		"body": [
			"MainAxisSize.max"
		],
		"description": "MainAxisSize.max"
	},
	"Icons": {
		"scope": "lua",
		"prefix": "Icons",
		"body": [
			"Icons"
		],
		"description": "Icons"
	},
	"Icons.arrow_back": {
		"scope": "lua",
		"prefix": "Icons.ac_unit",
		"body": [
			"Icons.ac_unit"
		],
		"description": "Icons.ac_unit"
	},
	"Icons.ac_unit": {
		"scope": "lua",
		"prefix": "Icons.ac_unit",
		"body": [
			"Icons.ac_unit"
		],
		"description": "Icons.ac_unit"
	},
	"Icons.arrow_downward": {
		"scope": "lua",
		"prefix": "Icons.arrow_downward",
		"body": [
			"Icons.arrow_downward"
		],
		"description": "Icons.arrow_downward"
	},
	"Icons.arrow_forward": {
		"scope": "lua",
		"prefix": "Icons.arrow_forward",
		"body": [
			"Icons.arrow_forward"
		],
		"description": "Icons.arrow_forward"
	},

	"Color": {
		"scope": "lua",
		"prefix": "Color",
		"body": [
			"Color('#ffffffff')"
		],
		"description": "Color"
	},
	"EdgeInsets.only": {
		"scope": "lua",
		"prefix": "EdgeInsets.only",
		"body": [
			"EdgeInsets.only({\n\ttop = $1,\n\tleft = $2,\n\tbottom = $3,\n\tright = $4\n})"
		],
		"description": "EdgeInsets.only"
	},
	"EdgeInsets.all": {
		"scope": "lua",
		"prefix": "EdgeInsets.all",
		"body": [
			"EdgeInsets.all($1)"
		],
		"description": "EdgeInsets.all"
	},
	"sp()": {
		"scope": "lua",
		"prefix": "sp()",
		"body": [
			"sp($1)"
		],
		"description": "sp()"
	},
	"w()": {
		"scope": "lua",
		"prefix": "w()",
		"body": [
			"w($1)"
		],
		"description": "w()"
	},
	"r()": {
		"scope": "lua",
		"prefix": "r()",
		"body": [
			"r($1)"
		],
		"description": "r()"
	},
	"sm()": {
		"scope": "lua",
		"prefix": "sm()",
		"body": [
			"sm($1)"
		],
		"description": "sm()"
	},
	"sw()": {
		"scope": "lua",
		"prefix": "sw()",
		"body": [
			"sw($1)"
		],
		"description": "sw()"
	},
	"h()": {
		"scope": "lua",
		"prefix": "h()",
		"body": [
			"h($1)"
		],
		"description": "h()"
	},
	"Border:new": {
		"scope": "lua",
		"prefix": "Border:new",
		"body": [
			"Border:new({\n\ttop = $1,\n\tbottom = $2,\n\tleft = $3,\n\tright = $4\n})"
		],
		"description": "Border:new"
	},
	"Border.all": {
		"scope": "lua",
		"prefix": "Border:all",
		"body": [
			"Border.all({\n\twidth = $1,\n\tcolor = $2\n})"
		],
		"description": "Border:new"
	},
	"BoxDecoration:new": {
		"scope": "lua",
		"prefix": "BoxDecoration:new",
		"body": [
			"BoxDecoration:new({\n\tcolor = $1,\n\tborderRadius = $2,\n\tborder = $3,\n\timage = $4,\n})"
		],
		"description": "BoxDecoration:new"
	},
	"DecorationImage:new": {
		"scope": "lua",
		"prefix": "DecorationImage:new",
		"body": [
			"DecorationImage:new({\n\timage = $1,\n\tfit = $2})"
		],
		"description": "DecorationImage:new"
	},
	"BorderRadius.only": {
		"scope": "lua",
		"prefix": "BorderRadius.only",
		"body": [
			"BorderRadius.only({\n\ttopLeft = $1,\n\ttopRight = $2,\n\tbottomLeft = $3,\n\tbottomRight = $4})"
		],
		"description": "BorderRadius.only"
	},
	"BorderRadius.all": {
		"scope": "lua",
		"prefix": "BorderRadius.all",
		"body": [
			"BorderRadius.all($1)"
		],
		"description": "BorderRadius.all"
	},
	"Container:new": {
		"scope": "lua",
		"prefix": "Container:new",
		"body": [
			"Container:new({\n\tchild = $1,\n\tmargin = $2,\n\tpadding = $3,\n\tdecoration = $4,\n\tforegroundDecoration = nil$5,\n\talignment = nil$6\n})"
		],
		"description": "Container:new"
	},
	"Center:new": {
		"scope": "lua",
		"prefix": "Center:new",
		"body": [
			"Center:new({\n\tchild = $1,\n\twidthFactor = $2,\n\theightFactor = $3\n})"
		],
		"description": "Center:new"
	},
	"EventBus:add": {
		"scope": "lua",
		"prefix": "EventBus:add",
		"body": [
			"EventBus:add({\n\tevent = function(args)--注册一个全局的函数，args为一个Luatable\n\t\t$1\n\tend,\n\tname = $2--全局函数名\n})"
		],
		"description": "EventBus:add"
	},
	"EventBus:remove": {
		"scope": "lua",
		"prefix": "EventBus:remove",
		"body": [
			"EventBus:remove({name = $1})--使用全局函数名移除当前的函数"
		],
		"description": "EventBus:remove"
	},
	"EventBus:call": {
		"scope": "lua",
		"prefix": "EventBus:call",
		"body": [
			"EventBus:call({--调用已经注册的函数\n\tname = $1,\n\targs = {$2}--函数需要的参数\n})"
		],
		"description": "EventBus:call"
	},
	"FractionallySizedBox:new": {
		"scope": "lua",
		"prefix": "FractionallySizedBox:new",
		"body": [
			"FractionallySizedBox:new({\n\tchild = $1,\n\twidthFactor = $2,\n\theightFactor = $3,\n\talignment = $4\n})"
		],
		"description": "FractionallySizedBox:new"
	},
	"SizedBox:new": {
		"scope": "lua",
		"prefix": "SizedBox:new",
		"body": [
			"SizedBox:new({\n\tchild = $1,\n\twidth = $2,\n\theight = $3\n})"
		],
		"description": "SizedBox:new"
	},
	"SafeArea:new": {
		"scope": "lua",
		"prefix": "SafeArea:new",
		"body": [
			"SafeArea:new({\n\tchild = $1\n})"
		],
		"description": "SafeArea:new"
	},
	"Matrix4.skew": {
		"scope": "lua",
		"prefix": "Matrix4.skew",
		"body": [
			"Matrix4.skew({\n\talpha = $1,\n\tbeta = $2})"
		],
		"description": "Matrix4.skew"
	},
	"Matrix4.skewX": {
		"scope": "lua",
		"prefix": "Matrix4.skewX",
		"body": [
			"Matrix4.skewX({\n\talpha = $1})"
		],
		"description": "Matrix4.skewX"
	},
	"Matrix4.skewY": {
		"scope": "lua",
		"prefix": "Matrix4.skewY",
		"body": [
			"Matrix4.skewY({\n\tbeta = $1})"
		],
		"description": "Matrix4.skewY"
	},
	"Matrix4.diagonal3Values": {
		"scope": "lua",
		"prefix": "Matrix4.diagonal3Values",
		"body": [
			"Matrix4.diagonal3Values({\n\tx = $1,\n\ty = $2,\n\tz = $3})"
		],
		"description": "Matrix4.diagonal3Values"
	},
	"Matrix4.rotationX": {
		"scope": "lua",
		"prefix": "Matrix4.rotationX",
		"body": [
			"Matrix4.rotationX($1)"
		],
		"description": "Matrix4.rotationX"
	},
	"Matrix4.rotationY": {
		"scope": "lua",
		"prefix": "Matrix4.rotationY",
		"body": [
			"Matrix4.rotationY($1)"
		],
		"description": "Matrix4.rotationY"
	},
	"Matrix4.rotationZ": {
		"scope": "lua",
		"prefix": "Matrix4.rotationZ",
		"body": [
			"Matrix4.rotationZ($1)"
		],
		"description": "Matrix4.rotationZ"
	},
	"Matrix4.translationValues": {
		"scope": "lua",
		"prefix": "Matrix4.translationValues",
		"body": [
			"Matrix4.translationValues({x = $1,y = $2,z = $3})"
		],
		"description": "Matrix4.translationValues"
	},
	"Matrix4.solve": {
		"scope": "lua",
		"prefix": "Matrix4.solve",
		"body": [
			"Matrix4.solve({A = $1,x = $2,b = $3})"
		],
		"description": "Matrix4.solve"
	},
	"Stack:new": {
		"scope": "lua",
		"prefix": "Stack:new",
		"body": [
			"Stack:new({\n\tchildren = $1,\n\talignment = Alignment.topLeft$2,\n\tfit = StackFit.loose$3\n})"
		],
		"description": "Stack:new"
	},
	"PageView:new": {
		"scope": "lua",
		"prefix": "PageView:new",
		"body": [
			"PageView:new({\n\tchildren = $1,\n\tcontroller = $2,\n\tonPageChanged = $3\n})"
		],
		"description": "PageView:new"
	},
	"Visibility:new": {
		"scope": "lua",
		"prefix": "Visibility:new",
		"body": [
			"Visibility:new({\n\tchild = $1,\n\tvisible = true$2\n})"
		],
		"description": "Visibility:new"
	},
	"BouncingScrollPhysics()": {
		"scope": "lua",
		"prefix": "BouncingScrollPhysics()",
		"body": [
			"BouncingScrollPhysics({\n\tparent = $1\n})"
		],
		"description": "BouncingScrollPhysics()"
	},
	"ClampingScrollPhysics()": {
		"scope": "lua",
		"prefix": "ClampingScrollPhysics()",
		"body": [
			"ClampingScrollPhysics({\n\tparent = $1\n})"
		],
		"description": "ClampingScrollPhysics()"
	},
	"NeverScrollableScrollPhysics()": {
		"scope": "lua",
		"prefix": "NeverScrollableScrollPhysics()",
		"body": [
			"NeverScrollableScrollPhysics({\n\tparent = $1\n})"
		],
		"description": "NeverScrollableScrollPhysics()"
	},
	"AlwaysScrollableScrollPhysics()": {
		"scope": "lua",
		"prefix": "AlwaysScrollableScrollPhysics()",
		"body": [
			"AlwaysScrollableScrollPhysics({\n\tparent = $1\n})"
		],
		"description": "AlwaysScrollableScrollPhysics()"
	},
	"PageController()": {
		"scope": "lua",
		"prefix": "PageController()",
		"body": [
			"PageController({\n\tinitialPage = 0,\n\tkeepPage = true,\n\tviewportFraction = 1\n})"
		],
		"description": "PageController()"
	},
	"PageJumpToPage()": {
		"scope": "lua",
		"prefix": "PageJumpToPage()",
		"body": [
			"PageJumpToPage(controller$1,1$2)"
		],
		"description": "PageJumpToPage()"
	},
	"PageJumpTo()": {
		"scope": "lua",
		"prefix": "PageJumpTo()",
		"body": [
			"PageJumpTo(controller$1,1$2)"
		],
		"description": "PageJumpTo()"
	},
	"Positioned:new":{
		"scope": "lua",
		"prefix": "Positioned:new",
		"body": [
			"Positioned:new({\n\tchild = $1,\n\tleft = $2,\n\ttop = $3,\n\tright = $4,\n\tbottom = $5,\n\twidth = $6,\n\theight = $7\n})"
		],
		"description": "Positioned:new"
	},
	"Positioned:fromRect":{
		"scope": "lua",
		"prefix": "Positioned:fromRect",
		"body": [
			"Positioned:fromRect({\n\tchild = $1,\n\trect = $2\n})"
		],
		"description": "Positioned:fromRect"
	},
	"Positioned:fill":{
		"scope": "lua",
		"prefix": "Positioned:fill",
		"body": [
			"Positioned:fill({\n\tchild = $1,\n\tleft = $2,\n\ttop = $3,\n\tright = $3,\n\tbottom = $4\n})"
		],
		"description": "Positioned:fill"
	},
	"Positioned:directional":{
		"scope": "lua",
		"prefix": "Positioned:directional",
		"body": [
			"Positioned:directional({\n\tchild = $1,\n\ttextDirection = $2,\n\tstart = nil,\n\ttop = nil,\n\t_end = nil,\n\tbottom = nil,\n\twidth = nil,\n\theight = nil\n})"
		],
		"description": "Positioned:directional"
	},
	"width =": {
		"scope": "lua",
		"prefix": "width =",
		"body": [
			"width ="
		],
		"description": "width ="
	},
	"height =": {
		"scope": "lua",
		"prefix": "height =",
		"body": [
			"height ="
		],
		"description": "height ="
	},
	"margin =": {
		"scope": "lua",
		"prefix": "margin =",
		"body": [
			"margin ="
		],
		"description": "margin ="
	},
	"padding =": {
		"scope": "lua",
		"prefix": "padding =",
		"body": [
			"padding ="
		],
		"description": "padding ="
	},
	"decoration =": {
		"scope": "lua",
		"prefix": "decoration =",
		"body": [
			"decoration ="
		],
		"description": "decoration ="
	},
	"color =": {
		"scope": "lua",
		"prefix": "color =",
		"body": [
			"color ="
		],
		"description": "color ="
	},
	"ElevatedButton:new": {
		"scope": "lua",
		"prefix": "ElevatedButton:new",
		"body": [
			"ElevatedButton:new({\n\tchild = $1,\n\tonPressed = $2,\n\tonLongPress = $3\n})"
		],
		"description": "ElevatedButton:new"
	},
	"GestureDetector:new": {
		"scope": "lua",
		"prefix": "GestureDetector:new",
		"body": [
			"GestureDetector:new({\n\tchild = $1,\n\tonTap = $2,\n\tonDoubleTap = $3\n})"
		],
		"description": "GestureDetector:new"
	},
	"IconButton:new": {
		"scope": "lua",
		"prefix": "IconButton:new",
		"body": [
			"IconButton:new({\n\ticon = $1,\n\ticonSize = $2,\n\tonPressed = $3\n})"
		],
		"description": "IconButton:new"
	},
	"onDoubleTap =": {
		"scope": "lua",
		"prefix": "onDoubleTap =",
		"body": [
			"onDoubleTap = function()",
			"   $1",
			"end"
		],
		"description": "onDoubleTap ="
	},
	"onTap =": {
		"scope": "lua",
		"prefix": "onTap =",
		"body": [
			"onTap = function()",
			"   $1",
			"end$0"
		],
		"description": "onTap ="
	},
	"Icon:new": {
		"scope": "lua",
		"prefix": "Icon:new",
		"body": [
			"Icon:new($1,{\n\tsize = $2,\n\tcolor = $3\n})"
		],
		"description": "Icon:new"
	},
	"Image.asset": {
		"scope": "lua",
		"prefix": "Image.asset",
		"body": [
			"Image.asset($1,{\n\twidth = $2,\n\theight = $3,\n\tfit = $4\n})"
		],
		"description": "Image.asset"
	},
	"Image.file": {
		"scope": "lua",
		"prefix": "Image.file",
		"body": [
			"Image.file($1,{\n\twidth = $2,\n\theight = $3,\n\tfit = $4\n})"
		],
		"description": "Image.file"
	},
	"Image.network": {
		"scope": "lua",
		"prefix": "Image.network",
		"body": [
			"Image.network($1,{\n\twidth = $2,\n\theight = $3,\n\tfit = $4\n})"
		],
		"description": "Image.network"
	},
	"FittedBox:new":{
		"scope": "lua",
		"prefix": "FittedBox:new",
		"body": [
			"FittedBox:new({\n\tchild = $1,\n\tfit = $2,\n\talignment = $3\n})"
		],
		"description": "FittedBox:new"
	},
	"InkWell:new": {
		"scope": "lua",
		"prefix": "InkWell:new",
		"body": [
			"InkWell:new({\n\tchild = $1,\n\tonTap = $2,\n\tonDoubleTap = $3\n})"
		],
		"description": "InkWell:new"
	},
	"Scaffold:new": {
		"scope": "lua",
		"prefix": "Scaffold:new",
		"body": [
			"Scaffold:new({\n\tbody = $1,\n\tappBar = $2,\n\tbottomNavigationBar = $2\n})"
		],
		"description": "Scaffold:new"
	},
	"Text:new": {
		"scope": "lua",
		"prefix": "Text:new",
		"body": [
			"Text:new($1,{\n\ttextAlign = TextAlign.left,\n\tstyle = TextStyle:new({\n\t\tfontSize = sp(20),\n\t\tfontWeight = FontWeight.w400,\n\t\tcolor = Color('#ff000000')\n\t})\n})"
		],
		"description": "Text:new"
	},
	"TextAlign.left": {
		"scope": "lua",
		"prefix": "TextAlign.left",
		"body": [
			"TextAlign.left"
		],
		"description": "TextAlign.left"
	},
	"TextAlign.right": {
		"scope": "lua",
		"prefix": "TextAlign.right",
		"body": [
			"TextAlign.right"
		],
		"description": "TextAlign.right"
	},
	"TextAlign.center": {
		"scope": "lua",
		"prefix": "TextAlign.center",
		"body": [
			"TextAlign.center"
		],
		"description": "TextAlign.center"
	},
	"TextAlign.justify": {
		"scope": "lua",
		"prefix": "TextAlign.justify",
		"body": [
			"TextAlign.justify"
		],
		"description": "TextAlign.justify"
	},
	"TextAlign.start": {
		"scope": "lua",
		"prefix": "TextAlign.start",
		"body": [
			"TextAlign.start"
		],
		"description": "TextAlign.start"
	},
	"TextAlign.end": {
		"scope": "lua",
		"prefix": "TextAlign.end",
		"body": [
			"TextAlign.end"
		],
		"description": "TextAlign.end"
	},
	
	"CommonStatefulWidget:new": {
		"scope": "lua",
		"prefix": "CommonStatefulWidget:new",
		"body": [
			"CommonStatefulWidget:new({\n\twidgetName = $1,\n\tpath = $2\n})"
		],
		"description": "CommonStatefulWidget:new"
	},
	"CommonStatelessWidget:new": {
		"scope": "lua",
		"prefix": "CommonStatelessWidget:new",
		"body": [
			"CommonStatelessWidget:new({\n\twidgetName = $1,\n\tpath = $2\n})"
		],
		"description": "CommonStatelessWidget:new"
	},
	".initState()": {
		"scope": "lua",
		"prefix": ".initState()",
		"body": [
			".initState()"
		],
		"description": ".initState()"
	},
	".setState()": {
		"scope": "lua",
		"prefix": ".setState()",
		"body": [
			".setState({\n\tcallback = function()\n\t$1\n\tend\n})"
		],
		"description": ".setState()"
	},
	".build()": {
		"scope": "lua",
		"prefix": ".build()",
		"body": [
			".build()"
		],
		"description": ".build()"
	},
	".dispose()": {
		"scope": "lua",
		"prefix": ".dispose()",
		"body": [
			".dispose()"
		],
		"description": ".dispose()"
	},
	".didUpdateWidget()": {
		"scope": "lua",
		"prefix": ".didUpdateWidget()",
		"body": [
			".didUpdateWidget(oldWidget)"
		],
		"description": ".didUpdateWidget()"
	},
	".didChangeDependencies()": {
		"scope": "lua",
		"prefix": ".didChangeDependencies()",
		"body": [
			".didChangeDependencies()"
		],
		"description": ".didChangeDependencies()"
	},
	".init()": {
		"scope": "lua",
		"prefix": ".init()",
		"body": [
			".init()"
		],
		"description": ".init()"
	},
	".encode()": {
		"scope": "lua",
		"prefix": ".encode()",
		"body": [
			".encode($1)"
		],
		"description": ".encode()"
	},
	".decode()": {
		"scope": "lua",
		"prefix": ".decode()",
		"body": [
			".decode($1)"
		],
		"description": ".decode()"
	
	},
	"fontFamily = ": {
		"scope": "lua",
		"prefix": "fontFamily = ",
		"body": [
			"fontFamily = $1"
		],
		"description": "fontFamily = "
	},
	"persistentFrameCallback": {
		"scope": "lua",
		"prefix": "persistentFrameCallback",
		"body": [
			"persistentFrameCallback"
		],
		"description": "persistentFrameCallback"
	},
	"postFrameCallback": {
		"scope": "lua",
		"prefix": "postFrameCallback",
		"body": [
			"postFrameCallback"
		],
		"description": "postFrameCallback"
	},
	"stl": {
		"scope": "lua",
		"prefix": "stl",
		"body": [
			"stl$1 = {}\nfunction stl$1.init(_data)--初始化操作_data 为lua table的传参 \n\nend\nfunction stl$1.build(ctx)--widget的build\n\treturn nil$2\nend\nreturn stl$1\n"
		],
		"description": "stl 无状态的widget"
	},
	"stf": {
		"scope": "lua",
		"prefix": "stf",
		"body": [
			"stf$1 = {}",
			"function stf$1.initState(_state,_tickerProvider,_data)--状态初始化_state是当前widget的状态，_tickerProvider是ticker,_data为lua table传参",
			"\t$5",
			"end",
			"",
			"--function stf$1.persistentFrameCallback(time)",
    		"--\tprint('persistentFrameCallback',time)",
			"--end",
			"",
			"--function stf$1.postFrameCallback(time)",
    		"--\tprint('postFrameCallback',time)",
			"--end",
			"",
			"function stf$1.build(ctx)--进行build操作",
			"\treturn nil$2--返回widget",
			"end",
			"",
			"function stf$1.dispose()--widget 销毁",
			"\t$3",
			"end",
			"",
			"",
			"return stf$1$4\n"
		],
		"description": "stf 有状态的widget"
	},
	"navPush()": {
		"scope": "lua",
		"prefix": "navPush()",
		"body": [
			"navPush({\n\tctx = $1,--上下文\n\twidget = $2--push的widget\n})"
		],
		"description": "navPush() 路由push"
	},
	"AnimationStatusListenerAdd()": {
		"scope": "lua",
		"prefix": "AnimationStatusListenerAdd()",
		"body": [
			"local listener = AnimationStatusListenerAdd({\n\tcontroller = $1,\n\tlistener = function(status)\n\tend\n})"
		],
		"description": "AnimationStatusListenerAdd()"
	},
	"AnimationStatusListenerRemove()": {
		"scope": "lua",
		"prefix": "AnimationStatusListenerRemove()",
		"body": [
			"AnimationStatusListenerRemove({\n\tcontroller = $1,\n\tlistener = $2\n})"
		],
		"description": "AnimationStatusListenerRemove()"
	},
	"AnimationControllerForward()": {
		"scope": "lua",
		"prefix": "AnimationControllerForward()",
		"body": [
			"AnimationControllerForward({\n\tcontroller = $1,\n\tfrom = nil$2\n})"
		],
		"description": "AnimationControllerForward()"
	},
	"AnimationControllerReverse()": {
		"scope": "lua",
		"prefix": "AnimationControllerReverse()",
		"body": [
			"AnimationControllerReverse({\n\tcontroller = $1,\n\tfrom = nil$2\n})"
		],
		"description": "AnimationControllerReverse()"
	},
	"AnimationControllerStop()": {
		"scope": "lua",
		"prefix": "AnimationControllerStop()",
		"body": [
			"AnimationControllerStop({\n\tcontroller = $1,\n\tcanceled = true$2\n})"
		],
		"description": "AnimationControllerStop()"
	},
	"CurvedAnimation()": {
		"scope": "lua",
		"prefix": "CurvedAnimation()",
		"body": [
			"CurvedAnimation({\n\tparent = $1,\n\tcurve = $2,\n\treverseCurve = nil$3\n})"
		],
		"description": "CurvedAnimation()"
	},
	"AnimationControllerReset()": {
		"scope": "lua",
		"prefix": "AnimationControllerReset()",
		"body": [
			"AnimationControllerReset({\n\tcontroller = $1\n})"
		],
		"description": "AnimationControllerReset()"
	},
	"AnimationControllerResync()": {
		"scope": "lua",
		"prefix": "AnimationControllerResync()",
		"body": [
			"AnimationControllerResync({\n\tcontroller = $1,\n\tvsync = $2\n})"
		],
		"description": "AnimationControllerResync()"
	},
	"navPop()": {
		"scope": "lua",
		"prefix": "navPop()",
		"body": [
			"navPop({\n\tctx = $1--上下文\n})"
		],
		"description": "navPop() 弹出路由"
	},
	"navReplaceAndRemoveAll()": {
		"scope": "lua",
		"prefix": "navReplaceAndRemoveAll()",
		"body": [
			"navReplaceAndRemoveAll({\n\tctx = $1,\n\twidget = $2\n})"
		],
		"description": "navReplaceAndRemoveAll()"
	},
	"navReplace()": {
		"scope": "lua",
		"prefix": "navReplace()",
		"body": [
			"navReplace({\n\tctx = $1,--上下文\n\twidget = $2--替换的当前的widget\n})"
		],
		"description": "navReplace() 路由替换"
	},
	"Size()": {
		"scope": "lua",
		"prefix": "Size()",
		"body": [
			"Size({\n\twidth = $1,\n\theight = $2\n})"
		],
		"description": "Size()"
	},
	"TextStyle:new()": {
		"scope": "lua",
		"prefix": "TextStyle:new()",
		"body": [
			"TextStyle:new({\n\tcolor = $1,\n\tfontWeight = $2,\n\tfontSize = $3\n})"
		],
		"description": "TextStyle:new()"
	},
	"StrutStyle()": {
		"scope": "lua",
		"prefix": "StrutStyle()",
		"body": [
			"StrutStyle({\n\tfontFamily = $1,\n\tfontWeight = $2,\n\tfontSize = $3\n})"
		],
		"description": "StrutStyle()"
	},
	"PreferredSize()": {
		"scope": "lua",
		"prefix": "PreferredSize()",
		"body": [
			"PreferredSize({\n\tchild = $1,\n\tpreferredSize = $2\n})"
		],
		"description": "PreferredSize()"
	},
	"Offset()": {
		"scope": "lua",
		"prefix": "Offset()",
		"body": [
			"Offset({\n\tdx = $1,\n\tdy = $2\n})"
		],
		"description": "Offset()"
	},
	"Spacer:new()": {
		"scope": "lua",
		"prefix": "Spacer()",
		"body": [
			"Spacer:new({\n\tflex = 1\n})"
		],
		"description": "Spacer()"
	},
	"FractionalOffset()": {
		"scope": "lua",
		"prefix": "FractionalOffset()",
		"body": [
			"FractionalOffset({\n\tdx = $1,\n\tdy = $2\n})"
		],
		"description": "FractionalOffset()"
	},
	"ScrollController()": {
		"scope": "lua",
		"prefix": "ScrollController()",
		"body": [
			"ScrollController({\n\tinitialScrollOffset = 0$1,\n\tkeepScrollOffset = true$2,\n\tdebugLabel = $3\n})"
		],
		"description": "ScrollController()"
	},
	"AnimationController()": {
		"scope": "lua",
		"prefix": "AnimationController()",
		"body": [
			"AnimationController({\n\tdurationMilliseconds = 500$1,\n\tvsync = $2\n})"
		],
		"description": "AnimationController()"
	},
	"GlobalKey()": {
		"scope": "lua",
		"prefix": "GlobalKey()",
		"body": [
			"GlobalKey({\n\tdebugLabel = nil$1\n})"
		],
		"description": "GlobalKey()"
	},
	"Transform()": {
		"scope": "lua",
		"prefix": "Transform()",
		"body": [
			"Transform({\n\ttransform = nil$1,\n\torigin = nil$2,,\n\tchild = nil$3\n})"
		],
		"description": "Transform()"
	},
	"SliverGridDelegateWithFixedCrossAxisCount()": {
		"scope": "lua",
		"prefix": "SliverGridDelegateWithFixedCrossAxisCount()",
		"body": [
			"SliverGridDelegateWithFixedCrossAxisCount({\n\tcrossAxisCount = $1,\n\tchildAspectRatio = 1.0$2,\n\tmainAxisSpacing = 0.0$3,\n\tcrossAxisSpacing = 0.0$4,\n\tmainAxisExtent = nil$5\n})"
		],
		"description": "SliverGridDelegateWithFixedCrossAxisCount()"
	},
	"SliverChildBuilderDelegate()": {
		"scope": "lua",
		"prefix": "SliverChildBuilderDelegate()",
		"body": [
			"SliverChildBuilderDelegate({\n\tbuilder = function (_ctx,index)\n\treturn null\nend$1\n,\n\tchildCount = nil$2,\n\taddAutomaticKeepAlives = true$3,\n\taddRepaintBoundaries = true$4,\n\taddSemanticIndexes = true$5,\n\tsemanticIndexOffset = 0$6,\n\tsemanticIndexOffset = 0$7,\n\tsemanticIndexCallback = function(w,index)\nreturn 0\n\tend\n})"
		],
		"description": "SliverChildBuilderDelegate()"
	},
	"ListView:new": {
		"scope": "lua",
		"prefix": "ListView:new()",
		"body": [
			"ListView:new({\n\tscrollDirection = Axis.vertical$1,\n\treverse = false$2,",
			"\tcontroller = nil$3,",
			"\tprimary = false$4,",
			"\tphysics = nil$4,",
			"\tshrinkWrap = false$5,",
			"\tpadding = nil$6,",
			"\taddAutomaticKeepAlives = true$7,",
			"\taddRepaintBoundaries = true$8,",
			"\taddSemanticIndexes = true$9,",
			"\tcacheExtent = nil$10,",
			"\tchildren = {}$11,",
			"\tsemanticChildCount = nil$12,",
			"\tdragStartBehavior = DragStartBehavior.start$13,",
			"\tkeyboardDismissBehavior = ScrollViewKeyboardDismissBehavior.manual$14,",
			"\trestorationId = nil$14,",
			"\tclipBehavior = Clip.hardEdge$15",
			"})"
		],
		"description": "ListView:new()"
	},
	"ListView:builder": {
		"scope": "lua",
		"prefix": "ListView:builder()",
		"body": [
			"ListView:builder({\n\tscrollDirection = Axis.vertical$1,\n\treverse = false$2,",
			"\tcontroller = nil$3,",
			"\tprimary = false$4,",
			"\tphysics = nil$16,",
			"\tshrinkWrap = false$5,",
			"\tpadding = nil$6,",
			"\taddAutomaticKeepAlives = true$7,",
			"\taddRepaintBoundaries = true$8,",
			"\taddSemanticIndexes = true$9,",
			"\tcacheExtent = nil$10,",
			"\titemBuilder = function (_ctx,index)--item Widget builder \n\t\treturn\n\tend$11,",
			"\titemCount = nil$16,",
			"\tsemanticChildCount = nil$12,",
			"\tdragStartBehavior = DragStartBehavior.start$13,",
			"\tkeyboardDismissBehavior = ScrollViewKeyboardDismissBehavior.manual$14,",
			"\trestorationId = nil$14,",
			"\tclipBehavior = Clip.hardEdge$15",
			"})"
		],
		"description": "ListView:builder()"
	},
	"ListView:separated": {
		"scope": "lua",
		"prefix": "ListView:separated()",
		"body": [
			"ListView:separated({\n\tscrollDirection = Axis.vertical$1,\n\treverse = false$2,",
			"\tcontroller = nil$3,",
			"\tprimary = false$4,",
			"\tphysics = nil$16,",
			"\tshrinkWrap = false$5,",
			"\tpadding = nil$6,",
			"\taddAutomaticKeepAlives = true$7,",
			"\taddRepaintBoundaries = true$8,",
			"\taddSemanticIndexes = true$9,",
			"\tcacheExtent = nil$10,",
			"\titemBuilder = function (_ctx,index)--item Widget builder \n\t\treturn\n\tend$11,",
			"\tseparatorBuilder = function (_ctx,index)--item Widget builder \n\t\treturn\n\tend$11,",
			"\titemCount = nil$16,",
			"\tsemanticChildCount = nil$12,",
			"\tdragStartBehavior = DragStartBehavior.start$13,",
			"\tkeyboardDismissBehavior = ScrollViewKeyboardDismissBehavior.manual$14,",
			"\trestorationId = nil$14,",
			"\tclipBehavior = Clip.hardEdge$15",
			"})"
		],
		"description": "ListView:builder()"
	},
	"ListView:custom": {
		"scope": "lua",
		"prefix": "ListView:custom()",
		"body": [
			"ListView:custom({",
			"\tscrollDirection = Axis.vertical$1,",
			"\treverse = false$2,",
			"\tcontroller = nil$3,",
			"\tprimary = false$4,",
			"\tphysics = nil$16,",
			"\tshrinkWrap = false$5,",
			"\tpadding = nil$6,",
			"\tchildrenDelegate = SliverChildBuilderDelegate(function(_ctx,index)--返回item Widget",
			"\t\treturn nil",
			"\tend,{",
			"\t\tchildCount = nil,",
			"\t\taddAutomaticKeepAlives = true,",
			"\t\taddRepaintBoundaries = true,",
			"\t\taddSemanticIndexes = true,",
			"\t\tsemanticIndexOffset = 0,",
			"\t\tsemanticIndexCallback = function(w,index)--返回semantic index",
			"\t\t\treturn nil",
			"\t\tend",
			"\t}),",
			"\titemExtent = nil$8,",
			"\tprototypeItem = nil$9,",
			"\tcacheExtent = nil$10,",
			"\tsemanticChildCount = nil$12,",
			"\tdragStartBehavior = DragStartBehavior.start$13,",
			"\tkeyboardDismissBehavior = ScrollViewKeyboardDismissBehavior.manual$14,",
			"\trestorationId = nil$14,",
			"\tclipBehavior = Clip.hardEdge$15",
			"})"
		],
		"description": "ListView:custom()"
	},
	"GridView:builder": {
		"scope": "lua",
		"prefix": "GridView:builder()",
		"body": [
			"GridView:builder({",
			"\tscrollDirection = Axis.vertical$1,",
			"\treverse = false$2,",
			"\tcontroller = nil$3,",
			"\tprimary = false$4,",
			"\tphysics = nil$16,",
			"\tshrinkWrap = false$5,",
			"\tpadding = nil$6,",
			"\tgridDelegate = nil$18,",
			"\titemBuilder = function (_ctx,index)--item Widget builder \n\t\treturn\n\tend$11,",
			"\titemCount = nil$16,",
			"\taddAutomaticKeepAlives = true$7,",
			"\taddRepaintBoundaries = true$8,",
			"\taddSemanticIndexes = true$9,",
			"\tcacheExtent = nil$10,",
			"\tsemanticChildCount = nil$12,",
			"\tdragStartBehavior = DragStartBehavior.start$13,",
			"\tkeyboardDismissBehavior = ScrollViewKeyboardDismissBehavior.manual$14,",
			"\trestorationId = nil$14,",
			"\tclipBehavior = Clip.hardEdge$15",
			"})"
		],
		"description": "GridView:builder()"
	},
	"CommonOverScrollBehaviorWidget()": {
		"scope": "lua",
		"prefix": "CommonOverScrollBehaviorWidget()",
		"body": [
			"CommonOverScrollBehaviorWidget({\n\tchild = $1\n})"
		],
		"description": "CommonOverScrollBehaviorWidget()"
	},
	"Helper:md5()": {
		"scope": "lua",
		"prefix": "Helper:md5()",
		"body": [
			"Helper:md5($1)"
		],
		"description": "Helper:md5()"
	},
	"Helper:aesEncode()": {
		"scope": "lua",
		"prefix": "Helper:aesEncode()",
		"body": [
			"Helper:aesEncode({key = $1,iv = $2,content = $3})",
		],
		"description": "Helper:aesEncode()"
	},
	"Helper:aseDecode()": {
		"scope": "lua",
		"prefix": "Helper:aseDecode()",
		"body": [
			"Helper:aseDecode({key = $1,iv = $2,content = $3})",
		],
		"description": "Helper:aseDecode()"
	},
	"Helper:setOrientations()": {
		"scope": "lua",
		"prefix": "Helper:setOrientations()",
		"body": [
			"Helper:setOrientations({$1})",
		],
		"description": "Helper:setOrientations()"
	},
	"Helper:setEnabledSystemUIMode()": {
		"scope": "lua",
		"prefix": "Helper:setEnabledSystemUIMode()",
		"body": [
			"Helper:setEnabledSystemUIMode(SystemUiMode.manual,{overlays = {}})",
		],
		"description": "Helper:setEnabledSystemUIMode()"
	},
	"SystemUiOverlay.top": {
		"scope": "lua",
		"prefix": "SystemUiOverlay.top",
		"body": [
			"SystemUiOverlay.top",
		],
		"description": "SystemUiOverlay.top"
	},
	"SystemUiOverlay.bottom": {
		"scope": "lua",
		"prefix": "SystemUiOverlay.bottom",
		"body": [
			"SystemUiOverlay.bottom",
		],
		"description": "SystemUiOverlay.bottom"
	},
	"SystemUiMode.leanBack": {
		"scope": "lua",
		"prefix": "SystemUiMode.leanBack",
		"body": [
			"SystemUiMode.leanBack",
		],
		"description": "SystemUiMode.leanBack"
	},
	"SystemUiMode.immersive": {
		"scope": "lua",
		"prefix": "SystemUiMode.immersive",
		"body": [
			"SystemUiMode.immersive",
		],
		"description": "SystemUiMode.immersive"
	},
	"SystemUiMode.immersiveSticky": {
		"scope": "lua",
		"prefix": "SystemUiMode.immersiveSticky",
		"body": [
			"SystemUiMode.immersiveSticky",
		],
		"description": "SystemUiMode.immersiveSticky"
	},
	"SystemUiMode.edgeToEdge": {
		"scope": "lua",
		"prefix": "SystemUiMode.edgeToEdge",
		"body": [
			"SystemUiMode.edgeToEdge",
		],
		"description": "SystemUiMode.edgeToEdge"
	},
	"SystemUiMode.manual": {
		"scope": "lua",
		"prefix": "SystemUiMode.manual",
		"body": [
			"SystemUiMode.manual",
		],
		"description": "SystemUiMode.manual"
	},
	"Helper.appMode": {
		"scope": "lua",
		"prefix": "Helper.appMode",
		"body": [
			"Helper.appMode",
		],
		"description": "Helper.appMode"
	},
	"Helper.appPltform": {
		"scope": "lua",
		"prefix": "Helper.appPltform",
		"body": [
			"Helper.appPltform",
		],
		"description": "Helper.appPltform"
	},
	"DeviceOrientation.portraitUp": {
		"scope": "lua",
		"prefix": "DeviceOrientation.portraitUp",
		"body": [
			"DeviceOrientation.portraitUp",
		],
		"description": "DeviceOrientation.portraitUp"
	},
	"DeviceOrientation.landscapeLeft": {
		"scope": "lua",
		"prefix": "DeviceOrientation.landscapeLeft",
		"body": [
			"DeviceOrientation.landscapeLeft",
		],
		"description": "DeviceOrientation.landscapeLeft"
	},
	"DeviceOrientation.portraitDown": {
		"scope": "lua",
		"prefix": "DeviceOrientation.portraitDown",
		"body": [
			"DeviceOrientation.portraitDown",
		],
		"description": "DeviceOrientation.portraitDown"
	},
	"DeviceOrientation.landscapeRight": {
		"scope": "lua",
		"prefix": "DeviceOrientation.landscapeRight",
		"body": [
			"DeviceOrientation.landscapeRight",
		],
		"description": "DeviceOrientation.landscapeRight"
	},
	"Curves.linear": {
		"scope": "lua",
		"prefix": "Curves.linear",
		"body": [
			"Curves.linear",
		],
		"description": "Curves.linear"
	},
	"Curves.decelerate": {
		"scope": "lua",
		"prefix": "Curves.decelerate",
		"body": [
			"Curves.decelerate",
		],
		"description": "Curves.decelerate"
	},
	"Curves.bounceIn": {
		"scope": "lua",
		"prefix": "Curves.bounceIn",
		"body": [
			"Curves.bounceIn",
		],
		"description": "Curves.bounceIn"
	},
	"Curves.bounceInOut": {
		"scope": "lua",
		"prefix": "Curves.bounceInOut",
		"body": [
			"Curves.bounceInOut",
		],
		"description": "Curves.bounceInOut"
	},
	"Curves.bounceOut": {
		"scope": "lua",
		"prefix": "Curves.bounceOut",
		"body": [
			"Curves.bounceOut",
		],
		"description": "Curves.bounceOut"
	},
	"Curves.ease": {
		"scope": "lua",
		"prefix": "Curves.ease",
		"body": [
			"Curves.ease",
		],
		"description": "Curves.ease"
	},
	"Curves.easeIn": {
		"scope": "lua",
		"prefix": "Curves.easeIn",
		"body": [
			"Curves.easeIn",
		],
		"description": "Curves.linear"
	},
	"Curves.easeInBack": {
		"scope": "lua",
		"prefix": "Curves.easeInBack",
		"body": [
			"Curves.easeInBack",
		],
		"description": "Curves.linear"
	},
	"Curves.easeInCirc": {
		"scope": "lua",
		"prefix": "Curves.easeInCirc",
		"body": [
			"Curves.easeInCirc",
		],
		"description": "Curves.easeInCirc"
	},
	"Curves.easeInCubic": {
		"scope": "lua",
		"prefix": "Curves.easeInCubic",
		"body": [
			"Curves.easeInCubic",
		],
		"description": "Curves.easeInCubic"
	},
	"Curves.easeInExpo": {
		"scope": "lua",
		"prefix": "Curves.easeInExpo",
		"body": [
			"Curves.easeInExpo",
		],
		"description": "Curves.easeInExpo"
	},
	"Curves.easeInOut": {
		"scope": "lua",
		"prefix": "Curves.easeInOut",
		"body": [
			"Curves.easeInOut",
		],
		"description": "Curves.easeInOut"
	},
	"Curves.easeInOutBack": {
		"scope": "lua",
		"prefix": "Curves.easeInOutBack",
		"body": [
			"Curves.easeInOutBack",
		],
		"description": "Curves.easeInOutBack"
	},
	"Curves.easeInOutCirc": {
		"scope": "lua",
		"prefix": "Curves.easeInOutCirc",
		"body": [
			"Curves.easeInOutCirc",
		],
		"description": "Curves.easeInOutCirc"
	},
	"Curves.easeInOutCubic": {
		"scope": "lua",
		"prefix": "Curves.easeInOutCubic",
		"body": [
			"Curves.easeInOutCubic",
		],
		"description": "Curves.easeInOutCubic"
	},
	"Curves.easeInOutCubicEmphasized": {
		"scope": "lua",
		"prefix": "Curves.easeInOutCubicEmphasized",
		"body": [
			"Curves.easeInOutCubicEmphasized",
		],
		"description": "Curves.easeInOutCubicEmphasized"
	},
	"Curves.easeInOutExpo": {
		"scope": "lua",
		"prefix": "Curves.easeInOutExpo",
		"body": [
			"Curves.easeInOutExpo",
		],
		"description": "Curves.easeInOutExpo"
	},
	"Curves.easeInOutQuad": {
		"scope": "lua",
		"prefix": "Curves.easeInOutQuad",
		"body": [
			"Curves.easeInOutQuad",
		],
		"description": "Curves.easeInOutQuad"
	},

	"Curves.easeInOutSine": {
		"scope": "lua",
		"prefix": "Curves.easeInOutSine",
		"body": [
			"Curves.easeInOutSine",
		],
		"description": "Curves.easeInOutSine"
	},
	"Curves.easeInQuad": {
		"scope": "lua",
		"prefix": "Curves.easeInQuad",
		"body": [
			"Curves.easeInQuad",
		],
		"description": "Curves.easeInQuad"
	},
	"Curves.easeInQuart": {
		"scope": "lua",
		"prefix": "Curves.easeInQuart",
		"body": [
			"Curves.easeInQuart",
		],
		"description": "Curves.easeInQuart"
	},
	"Curves.easeInOutQuint": {
		"scope": "lua",
		"prefix": "Curves.easeInOutQuint",
		"body": [
			"Curves.easeInOutQuint",
		],
		"description": "Curves.easeInOutQuint"
	},
	"Curves.easeInToLinear": {
		"scope": "lua",
		"prefix": "Curves.easeInToLinear",
		"body": [
			"Curves.easeInToLinear",
		],
		"description": "Curves.easeInToLinear"
	},
	"Curves.easeOut": {
		"scope": "lua",
		"prefix": "Curves.easeOut",
		"body": [
			"Curves.easeOut",
		],
		"description": "Curves.easeOut"
	},
	"Curves.easeOutBack": {
		"scope": "lua",
		"prefix": "Curves.easeOutBack",
		"body": [
			"Curves.easeOutBack",
		],
		"description": "Curves.easeOutBack"
	},
	"Curves.easeOutCirc": {
		"scope": "lua",
		"prefix": "Curves.easeOutCirc",
		"body": [
			"Curves.easeOutCirc",
		],
		"description": "Curves.easeOutCirc"
	},
	"Curves.easeOutCubic": {
		"scope": "lua",
		"prefix": "Curves.easeOutCubic",
		"body": [
			"Curves.easeOutCubic",
		],
		"description": "Curves.easeOutCubic"
	},
	"Curves.easeOutExpo": {
		"scope": "lua",
		"prefix": "Curves.easeOutExpo",
		"body": [
			"Curves.easeOutExpo",
		],
		"description": "Curves.easeOutExpo"
	},
	"Curves.easeOutQuad": {
		"scope": "lua",
		"prefix": "Curves.easeOutQuad",
		"body": [
			"Curves.easeOutQuad",
		],
		"description": "Curves.easeOutQuad"
	},
	"Curves.easeOutQuart": {
		"scope": "lua",
		"prefix": "Curves.easeOutQuart",
		"body": [
			"Curves.easeOutQuart",
		],
		"description": "Curves.easeOutQuart"
	},
	"Curves.easeOutSine": {
		"scope": "lua",
		"prefix": "Curves.easeOutSine",
		"body": [
			"Curves.easeOutSine",
		],
		"description": "Curves.easeOutSine"
	},
	"Curves.elasticIn": {
		"scope": "lua",
		"prefix": "Curves.elasticIn",
		"body": [
			"Curves.elasticIn",
		],
		"description": "Curves.elasticIn"
	},
	"Curves.elasticInOut": {
		"scope": "lua",
		"prefix": "Curves.elasticInOut",
		"body": [
			"Curves.elasticInOut",
		],
		"description": "Curves.elasticInOut"
	},
	"Curves.elasticOut": {
		"scope": "lua",
		"prefix": "Curves.elasticOut",
		"body": [
			"Curves.elasticOut",
		],
		"description": "Curves.elasticOut"
	},
	"Curves.fastLinearToSlowEaseIn": {
		"scope": "lua",
		"prefix": "Curves.fastLinearToSlowEaseIn",
		"body": [
			"Curves.fastLinearToSlowEaseIn",
		],
		"description": "Curves.fastLinearToSlowEaseIn"
	},
	"Curves.linearToEaseOut": {
		"scope": "lua",
		"prefix": "Curves.linearToEaseOut",
		"body": [
			"Curves.linearToEaseOut",
		],
		"description": "Curves.linearToEaseOut"
	},
	"Curves.slowMiddle": {
		"scope": "lua",
		"prefix": "Curves.slowMiddle",
		"body": [
			"Curves.slowMiddle",
		],
		"description": "Curves.slowMiddle"
	},
	"TextDirection.rtl": {
		"scope": "lua",
		"prefix": "TextDirection.rtl",
		"body": [
			"TextDirection.rtl",
		],
		"description": "TextDirection.rtl"
	},
	"TextDirection.ltr": {
		"scope": "lua",
		"prefix": "TextDirection.ltr",
		"body": [
			"TextDirection.ltr",
		],
		"description": "TextDirection.ltr"
	},
	"FontStyle.normal": {
		"scope": "lua",
		"prefix": "FontStyle.normal",
		"body": [
			"FontStyle.normal",
		],
		"description": "FontStyle.normal"
	},
	"FontStyle.italic": {
		"scope": "lua",
		"prefix": "FontStyle.italic",
		"body": [
			"FontStyle.italic",
		],
		"description": "FontStyle.italic"
	},
	"TextBaseline.alphabetic": {
		"scope": "lua",
		"prefix": "TextBaseline.alphabetic",
		"body": [
			"TextBaseline.alphabetic",
		],
		"description": "TextBaseline.alphabetic"
	},
	"TextBaseline.ideographic": {
		"scope": "lua",
		"prefix": "TextBaseline.ideographic",
		"body": [
			"TextBaseline.ideographic",
		],
		"description": "TextBaseline.ideographic"
	},
	"VerticalDirection.up": {
		"scope": "lua",
		"prefix": "VerticalDirection.up",
		"body": [
			"VerticalDirection.up",
		],
		"description": "VerticalDirection.up"
	},
	"VerticalDirection.down": {
		"scope": "lua",
		"prefix": "VerticalDirection.down",
		"body": [
			"VerticalDirection.down",
		],
		"description": "VerticalDirection.down"
	},
	"TextOverflow.clip": {
		"scope": "lua",
		"prefix": "TextOverflow.clip",
		"body": [
			"TextOverflow.clip",
		],
		"description": "TextOverflow.clip"
	},
	"TextOverflow.fade": {
		"scope": "lua",
		"prefix": "TextOverflow.fade",
		"body": [
			"TextOverflow.fade",
		],
		"description": "TextOverflow.fade"
	},
	"TextOverflow.ellipsis": {
		"scope": "lua",
		"prefix": "TextOverflow.ellipsis",
		"body": [
			"TextOverflow.ellipsis",
		],
		"description": "TextOverflow.ellipsis"
	},
	"TextOverflow.visible": {
		"scope": "lua",
		"prefix": "TextOverflow.visible",
		"body": [
			"TextOverflow.visible",
		],
		"description": "TextOverflow.visible"
	},
	"Text.rich()": {
		"scope": "lua",
		"prefix": "Text.rich()",
		"body": [
			"Text.rich(\n\tTextSpan:new({\n\ttext = $2,\n\tchildren = $3,\n\tstyle = $4\n}),{\n\tstyle = $5,\n\ttextAlign = $6\n})",
		],
		"description": "Text.rich()"
	},
	"Rect.fromLTRB": {
		"scope": "lua",
		"prefix": "Rect.fromLTRB",
		"body": [
			"Rect.fromLTRB({\n\tleft = $1,\n\ttop = $2,\n\tright = $3,\n\tbottom = $4\n})"
		],
		"description": "Rect.fromLTRB"
	},
	"Rect.fromLTWH": {
		"scope": "lua",
		"prefix": "Rect.fromLTWH",
		"body": [
			"Rect.fromLTWH({\n\tleft = $1,\n\ttop = $2,\n\twidth = $3,\n\theight = $4\n})"
		],
		"description": "Rect.fromLTWH"
	},
	"Rect.fromCircle": {
		"scope": "lua",
		"prefix": "Rect.fromCircle",
		"body": [
			"Rect.fromCircle({\n\tcenter = $1,\n\tradius = $2\n})"
		],
		"description": "Rect.fromCircle"
	},
	"Rect.fromCenter": {
		"scope": "lua",
		"prefix": "Rect.fromCenter",
		"body": [
			"Rect.fromCenter({\n\tcenter = $1,\n\twidth = $2,\n\theight = $3\n})"
		],
		"description": "Rect.fromCenter"
	},
	"Rect.fromPoints": {
		"scope": "lua",
		"prefix": "Rect.fromPoints",
		"body": [
			"Rect.fromPoints({\n\ta = $1,\n\tb = $2\n})"
		],
		"description": "Rect.fromPoints"
	},
	"BorderStyle.none": {
		"scope": "lua",
		"prefix": "BorderStyle.none",
		"body": [
			"BorderStyle.none"
		],
		"description": "BorderStyle.none"
	},
	"BorderStyle.solid": {
		"scope": "lua",
		"prefix": "BorderStyle.solid",
		"body": [
			"BorderStyle.solid"
		],
		"description": "BorderStyle.solid"
	},
	"BorderSide:new()": {
		"scope": "lua",
		"prefix": "BorderSide:new()",
		"body": [
			"BorderSide:new({\n\tcolor = $1,\n\twidth = 1.0,\n\tstyle = $2\n})"
		],
		"description": "BorderSide:new()"
	},
	"RoundedRectangleBorder:new()": {
		"scope": "lua",
		"prefix": "RoundedRectangleBorder:new()",
		"body": [
			"RoundedRectangleBorder:new({\n\tside = $1,\n\tborderRadius = $2\n})"
		],
		"description": "RoundedRectangleBorder:new()"
	},
	"ButtonStyle:new()": {
		"scope": "lua",
		"prefix": "ButtonStyle:new()",
		"body": [
			"ButtonStyle:new({\n\ttextStyle = $1,\n\tbackgroundColor = $2,\n\tshape = $3,\n\tanimationDurationMilliSec = $4\n})"
		],
		"description": "ButtonStyle:new()"
	},
	"SharedPreferences:setString()": {
		"scope": "lua",
		"prefix": "SharedPreferences:setString()",
		"body": [
			"SharedPreferences:setString({key = $1,value = $2})--设置字符串"
		],
		"description": "SharedPreferences:setString()"
	},
	"SharedPreferences:setInt()": {
		"scope": "lua",
		"prefix": "SharedPreferences:setInt()",
		"body": [
			"SharedPreferences:setInt({key = $1,value = $2})--设置一个int"
		],
		"description": "SharedPreferences:setInt()"
	},
	"SharedPreferences:setDouble()": {
		"scope": "lua",
		"prefix": "SharedPreferences:setDouble()",
		"body": [
			"SharedPreferences:setDouble({key = $1,value = $2})--设置double"
		],
		"description": "SharedPreferences:setDouble()"
	},
	"SharedPreferences:setBool()": {
		"scope": "lua",
		"prefix": "SharedPreferences:setBool()",
		"body": [
			"SharedPreferences:setBool({key = $1,value = $2})--设置bool值"
		],
		"description": "SharedPreferences:setBool()"
	},
	"SharedPreferences:setStringList()": {
		"scope": "lua",
		"prefix": "SharedPreferences:setStringList()",
		"body": [
			"SharedPreferences:setStringList({key = $1,value = $2})--设置String的luatable"
		],
		"description": "SharedPreferences:setStringList()"
	},
	"SharedPreferences:getString()": {
		"scope": "lua",
		"prefix": "SharedPreferences:getString()",
		"body": [
			"SharedPreferences:getString({key = $1})--获取string"
		],
		"description": "SharedPreferences:getString()"
	},
	"SharedPreferences:getInt()": {
		"scope": "lua",
		"prefix": "SharedPreferences:getInt()",
		"body": [
			"SharedPreferences:getInt({key = $1})--获取int"
		],
		"description": "SharedPreferences:getInt()"
	},
	"SharedPreferences:getDouble()": {
		"scope": "lua",
		"prefix": "SharedPreferences:getDouble()",
		"body": [
			"SharedPreferences:getDouble({key = $1})--获取一个double"
		],
		"description": "SharedPreferences:getDouble()"
	},
	"SharedPreferences:getBool()": {
		"scope": "lua",
		"prefix": "SharedPreferences:getBool()",
		"body": [
			"SharedPreferences:getBool({key = $1})--获取key所指的bool"
		],
		"description": "SharedPreferences:getBool()"
	},
	"SharedPreferences:getStringList()": {
		"scope": "lua",
		"prefix": "SharedPreferences:getStringList()",
		"body": [
			"SharedPreferences:getStringList({key = $1})--获取Luatable"
		],
		"description": "SharedPreferences:getStringList()"
	},
	"SharedPreferences:remove()": {
		"scope": "lua",
		"prefix": "SharedPreferences:remove()",
		"body": [
			"SharedPreferences:remove({key = $1})--移除某个key"
		],
		"description": "SharedPreferences:remove()"
	},
	"SharedPreferences:clear()": {
		"scope": "lua",
		"prefix": "SharedPreferences:clear()",
		"body": [
			"SharedPreferences:clear()--清除所有key"
		],
		"description": "SharedPreferences:clear()"
	},
	"SharedPreferences:containsKey()": {
		"scope": "lua",
		"prefix": "SharedPreferences:containsKey()",
		"body": [
			"SharedPreferences:containsKey({key = $1})--返回bool"
		],
		"description": "SharedPreferences:containsKey()"
	},
	"FloatingActionButtonLocation.startTop": {
		"scope": "lua",
		"prefix": "FloatingActionButtonLocation.startTop",
		"body": [
			"FloatingActionButtonLocation.startTop",
		],
		"description": "FloatingActionButtonLocation.startTop"
	},
	"FloatingActionButtonLocation.miniStartTop": {
		"scope": "lua",
		"prefix": "FloatingActionButtonLocation.miniStartTop",
		"body": [
			"FloatingActionButtonLocation.miniStartTop",
		],
		"description": "FloatingActionButtonLocation.miniStartTop"
	},
	"FloatingActionButtonLocation.centerTop": {
		"scope": "lua",
		"prefix": "FloatingActionButtonLocation.centerTop",
		"body": [
			"FloatingActionButtonLocation.centerTop",
		],
		"description": "FloatingActionButtonLocation.centerTop"
	},
	"FloatingActionButtonLocation.miniCenterTop": {
		"scope": "lua",
		"prefix": "FloatingActionButtonLocation.miniCenterTop",
		"body": [
			"FloatingActionButtonLocation.miniCenterTop",
		],
		"description": "FloatingActionButtonLocation.miniCenterTop"
	},
	"FloatingActionButtonLocation.endTop": {
		"scope": "lua",
		"prefix": "FloatingActionButtonLocation.endTop",
		"body": [
			"FloatingActionButtonLocation.endTop",
		],
		"description": "FloatingActionButtonLocation.endTop"
	},
	"FloatingActionButtonLocation.miniEndTop": {
		"scope": "lua",
		"prefix": "FloatingActionButtonLocation.miniEndTop",
		"body": [
			"FloatingActionButtonLocation.miniEndTop",
		],
		"description": "FloatingActionButtonLocation.miniEndTop"
	},
	"FloatingActionButtonLocation.startFloat": {
		"scope": "lua",
		"prefix": "FloatingActionButtonLocation.startFloat",
		"body": [
			"FloatingActionButtonLocation.startFloat",
		],
		"description": "FloatingActionButtonLocation.startFloat"
	},
	"FloatingActionButtonLocation.miniStartFloat": {
		"scope": "lua",
		"prefix": "FloatingActionButtonLocation.miniStartFloat",
		"body": [
			"FloatingActionButtonLocation.miniStartFloat",
		],
		"description": "FloatingActionButtonLocation.miniStartFloat"
	},
	"FloatingActionButtonLocation.centerFloat": {
		"scope": "lua",
		"prefix": "FloatingActionButtonLocation.centerFloat",
		"body": [
			"FloatingActionButtonLocation.centerFloat",
		],
		"description": "FloatingActionButtonLocation.centerFloat"
	},
	"FloatingActionButtonLocation.miniCenterFloat": {
		"scope": "lua",
		"prefix": "FloatingActionButtonLocation.miniCenterFloat",
		"body": [
			"FloatingActionButtonLocation.miniCenterFloat",
		],
		"description": "FloatingActionButtonLocation.miniCenterFloat"
	},
	"FloatingActionButtonLocation.endFloat": {
		"scope": "lua",
		"prefix": "FloatingActionButtonLocation.endFloat",
		"body": [
			"FloatingActionButtonLocation.endFloat",
		],
		"description": "FloatingActionButtonLocation.endFloat"
	},
	"FloatingActionButtonLocation.miniEndFloat": {
		"scope": "lua",
		"prefix": "FloatingActionButtonLocation.miniEndFloat",
		"body": [
			"FloatingActionButtonLocation.miniEndFloat",
		],
		"description": "FloatingActionButtonLocation.miniEndFloat"
	},
	"FloatingActionButtonLocation.startDocked": {
		"scope": "lua",
		"prefix": "FloatingActionButtonLocation.startDocked",
		"body": [
			"FloatingActionButtonLocation.startDocked",
		],
		"description": "FloatingActionButtonLocation.startDocked"
	},
	"FloatingActionButtonLocation.miniStartDocked": {
		"scope": "lua",
		"prefix": "FloatingActionButtonLocation.miniStartDocked",
		"body": [
			"FloatingActionButtonLocation.miniStartDocked",
		],
		"description": "FloatingActionButtonLocation.miniStartDocked"
	},
	"FloatingActionButtonLocation.centerDocked": {
		"scope": "lua",
		"prefix": "FloatingActionButtonLocation.centerDocked",
		"body": [
			"FloatingActionButtonLocation.centerDocked",
		],
		"description": "FloatingActionButtonLocation.centerDocked"
	},
	"FloatingActionButtonLocation.miniCenterDocked": {
		"scope": "lua",
		"prefix": "FloatingActionButtonLocation.miniCenterDocked",
		"body": [
			"FloatingActionButtonLocation.miniCenterDocked",
		],
		"description": "FloatingActionButtonLocation.miniCenterDocked"
	},
	"FloatingActionButtonLocation.endDocked": {
		"scope": "lua",
		"prefix": "FloatingActionButtonLocation.endDocked",
		"body": [
			"FloatingActionButtonLocation.endDocked",
		],
		"description": "FloatingActionButtonLocation.endDocked"
	},
	"FloatingActionButtonLocation.miniEndDocked": {
		"scope": "lua",
		"prefix": "FloatingActionButtonLocation.miniEndDocked",
		"body": [
			"FloatingActionButtonLocation.miniEndDocked",
		],
		"description": "FloatingActionButtonLocation.miniEndDocked"
	},
	"ResponseType.json": {
		"scope": "lua",
		"prefix": "ResponseType.json",
		"body": [
			"ResponseType.json",
		],
		"description": "ResponseType.json"
	},
	"ResponseType.stream": {
		"scope": "lua",
		"prefix": "ResponseType.stream",
		"body": [
			"ResponseType.stream",
		],
		"description": "ResponseType.stream"
	},
	"ResponseType.plain": {
		"scope": "lua",
		"prefix": "ResponseType.plain",
		"body": [
			"ResponseType.plain",
		],
		"description": "ResponseType.plain"
	},
	"ResponseType.bytes": {
		"scope": "lua",
		"prefix": "ResponseType.bytes",
		"body": [
			"ResponseType.bytes",
		],
		"description": "ResponseType.bytes"
	},
	"Shadow:new()": {
		"scope": "lua",
		"prefix": "Shadow:new()",
		"body": [
			"Shadow:new({\n\tcolor = Color(#ff000000)$1,\n\toffset = Offset.zero$2,\n\tblurRadius = 0.0$3\n})--新建shadow"
		],
		"description": "Shadow:new()"
	},
	"IconThemeData:new()": {
		"scope": "lua",
		"prefix": "IconThemeData:new()",
		"body": [
			"IconThemeData:new({\n\tcolor = Color(#ff000000),\n\topacity = 1.0,\n\tsize = 24.0,shadows = {}\n})--新建IconThemeData"
		],
		"description": "IconThemeData:new()"
	},
	"CommonState:new()": {
		"scope": "lua",
		"prefix": "CommonState:new()",
		"body": [
			"CommonState:new({\n\tstateKey = $1,\n\tvalue = {$2}\n})--新建一个state"
		],
		"description": "CommonState:new()"
	},
	"CommonState:notify()": {
		"scope": "lua",
		"prefix": "CommonState:notify()",
		"body": [
			"CommonState:notify({stateKey = $1})--广播state"
		],
		"description": "CommonState:notify()"
	},
	"CommonCusumerWidget:new()": {
		"scope": "lua",
		"prefix": "CommonCusumerWidget:new()",
		"body": [
			"CommonCusumerWidget:new({\n\tstateKey = $1,\n\tchild = $2,\n\tbuilder = function (_ctx,_tb,_child)\n\t\treturn _child\n\tend\n})--CusumerWidget"
		],
		"description": "CommonCusumerWidget:new()"
	},
	"BottomNavigationBarItem:new()": {
		"scope": "lua",
		"prefix": "BottomNavigationBarItem:new()",
		"body": [
			"BottomNavigationBarItem:new({\n\ticon = $1,\n\tlabel = $2,\n\tbackgroundColor = $3,\n\ttooltip = $4\n})"
		],
		"description": "BottomNavigationBarItem:new()"
	},
	"Provider:set()": {
		"scope": "lua",
		"prefix": "Provider:set()",
		"body": [
			"Provider:set({\n\tcontext = $1,\n\tvalue = $2,\n\tstateKey = $3,\n\tlisten = false$4\n})--CusumerWidget"
		],
		"description": "Provider:set()"
	},
	"Provider:get()": {
		"scope": "lua",
		"prefix": "Provider:get()",
		"body": [
			"Provider:get({\n\tcontext = $1,\n\tstateKey = $2,\n\tlisten = false$3\n})--CusumerWidget"
		],
		"description": "Provider:get()"
	},
	"FlutterBottomNavigationBarType.fixed": {
		"scope": "lua",
		"prefix": "FlutterBottomNavigationBarType.fixed",
		"body": [
			"FlutterBottomNavigationBarType.fixed"
		],
		"description": "FlutterBottomNavigationBarType.fixed"
	},
	"FlutterBottomNavigationBarType.shifting": {
		"scope": "lua",
		"prefix": "FlutterBottomNavigationBarType.shifting",
		"body": [
			"FlutterBottomNavigationBarType.shifting"
		],
		"description": "FlutterBottomNavigationBarType.shifting"
	},
	"BottomNavigationBar:new()": {
		"scope": "lua",
		"prefix": "BottomNavigationBar:new()",
		"body": [
			"BottomNavigationBar:new({\n\titems = {$1},\n\tcurrentIndex = $2,\n\tonTap = function (index)\t\n\tend\n})"
		],
		"description": "BottomNavigationBar:new()"
	},
	"NetAgent:SetOptions()": {
		"scope": "lua",
		"prefix": "NetAgent:SetOptions()",
		"body": [
			"NetAgent:SetOptions({\n\tconnectTimeout = 15000,\n\treceiveTimeout = 15000,\n\tsendTimeout = 6000*3,\n\tbaseUrl = $1\n})"
		],
		"description": "NetAgent:SetOptions()"
	},

	"NetAgent:Fetch()": {
		"scope": "lua",
		"prefix": "NetAgent:Fetch()",
		"body": [
			"NetAgent:Fetch({\n\turl = '$1',\n\tmethod = 'POST',\n\thost = nil,\n\tparams = {$2},\n\theader = {$3},\n\tformData = {$4},\n\tcontentType = 'application/json',\n\tresponseType = ResponseType.json,\n\tcallback = function (res)\n\n\t$5end\n})"
		],
		"description": "NetAgent:Fetch()"
	},
	"AlignmentDirectional.topStart": {
		"scope": "lua",
		"prefix": "AlignmentDirectional.topStart",
		"body": [
			"AlignmentDirectional.topStart"
		],
		"description": "AlignmentDirectional.topStart"
	},
	"AlignmentDirectional.topCenter": {
		"scope": "lua",
		"prefix": "AlignmentDirectional.topCenter",
		"body": [
			"AlignmentDirectional.topCenter"
		],
		"description": "AlignmentDirectional.topCenter"
	},
	"AlignmentDirectional.topEnd": {
		"scope": "lua",
		"prefix": "AlignmentDirectional.topEnd",
		"body": [
			"AlignmentDirectional.topEnd"
		],
		"description": "AlignmentDirectional.topEnd"
	},
	"AlignmentDirectional.centerStart": {
		"scope": "lua",
		"prefix": "AlignmentDirectional.centerStart",
		"body": [
			"AlignmentDirectional.centerStart"
		],
		"description": "AlignmentDirectional.centerStart"
	},
	"AlignmentDirectional.center": {
		"scope": "lua",
		"prefix": "AlignmentDirectional.center",
		"body": [
			"AlignmentDirectional.center"
		],
		"description": "AlignmentDirectional.center"
	},
	"AlignmentDirectional.centerEnd": {
		"scope": "lua",
		"prefix": "AlignmentDirectional.centerEnd",
		"body": [
			"AlignmentDirectional.centerEnd"
		],
		"description": "AlignmentDirectional.centerEnd"
	},
	"AlignmentDirectional.bottomStart": {
		"scope": "lua",
		"prefix": "AlignmentDirectional.bottomStart",
		"body": [
			"AlignmentDirectional.bottomStart"
		],
		"description": "AlignmentDirectional.bottomStart"
	},
	"AlignmentDirectional.bottomCenter": {
		"scope": "lua",
		"prefix": "AlignmentDirectional.bottomCenter",
		"body": [
			"AlignmentDirectional.bottomCenter"
		],
		"description": "AlignmentDirectional.bottomCenter"
	},
	"AlignmentDirectional.bottomEnd": {
		"scope": "lua",
		"prefix": "AlignmentDirectional.bottomEnd",
		"body": [
			"AlignmentDirectional.bottomEnd"
		],
		"description": "AlignmentDirectional.bottomEnd"
	},
	"SingleChildScrollView:new()": {
		"scope": "lua",
		"prefix": "SingleChildScrollView:new()",
		"body": [
			"SingleChildScrollView:new({\n\tchild = $1,\n\tcontroller = $2\n})"
		],
		"description": "SingleChildScrollView:new()"
	},
	"Helper:setClipboard()": {
		"scope": "lua",
		"prefix": "Helper:setClipboard()",
		"body": [
			"Helper:setClipboard($1)"
		],
		"description": "Helper:setClipboard()"
	},
	"Helper:getClipboard()": {
		"scope": "lua",
		"prefix": "Helper:getClipboard()",
		"body": [
			"Helper:getClipboard({\n\tformat = 'text/plain',\n\tcallback = function (value)\n\t\t$1\n\tend\n})"
		],
		"description": "Helper:getClipboard()"
	},
	"WidgetBinding:addPersistentFrameCallback()": {
		"scope": "lua",
		"prefix": "WidgetBinding:addPersistentFrameCallback()",
		"body": [
			"WidgetBinding:addPersistentFrameCallback({\n\tcallback = function (time)\n\t\t$1\n\tend\n})"
		],
		"description": "WidgetBinding:addPersistentFrameCallback()"
	},
	"WidgetBinding:addPostFrameCallback()": {
		"scope": "lua",
		"prefix": "WidgetBinding:addPostFrameCallback()",
		"body": [
			"WidgetBinding:addPostFrameCallback({\n\tcallback = function (time)\n\t\t$1\n\tend\n})"
		],
		"description": "WidgetBinding:addPostFrameCallback()"
	},
	"TimePicker:show()": {
		"scope": "lua",
		"prefix": "TimePicker:show()",
		"body": [
			"TimePicker:show({\n\tcontext = ctx,\n\thour = 2,\n\tminute = 3,\n\tcancelText = '取消',\n\tconfirmText = '确定',\n\thelpText = '选择时间',\n\thourLabelText = '时',\n\tminuteLabelText = '分',\n\tcallback = function(h,m)\n\t\t$1\n\tend\n})"
		],
		"description": "TimePicker:show()"
	},
	"DatePicker:show()": {
		"scope": "lua",
		"prefix": "DatePicker:show()",
		"body": [
			"DatePicker:show({",
			"\tcontext = ctx,",
			"\tinitialDate = 1641484800000,",
			"\tfirstDate = 1638288000000,",
			"\tlastDate = 1677569226717,",
			"\tcancelText = '取消',",
			"\tconfirmText = '确定',",
			"\thelpText = '选择时间',",
			"\thourLabelText = '时',",
			"\tminuteLabelText = '分',",
			"\tcallback = function(time)",
			"\t\t$1",
			"\tend\n})"
		],
		"description": "DatePicker:show()",
	},
	"Checkbox:new()": {
		"scope": "lua",
		"prefix": "Checkbox:new()",
		"body": [
			"Checkbox:new({",
			"\tvalue = false,",
			"\tonChanged = function(value)",
			"\t\t$1",
			"\tend\n})"
		],
		"description": "Checkbox:new()",
	},
	"CheckboxListTile:new()": {
		"scope": "lua",
		"prefix": "CheckboxListTile:new()",
		"body": [
			"CheckboxListTile:new({",
			"\tvalue = false,",
			"\ttitle = nil$1,",
			"\tsubtitle = nil$2,",
			"\tcontrolAffinity = ListTileControlAffinity.leading$3,",
			"\tonChanged = function(value)",
			"\t\t$4",
			"\tend\n})"
		],
		"description": "CheckboxListTile:new()",
	},
	"ListTileControlAffinity.leading": {
		"scope": "lua",
		"prefix": "ListTileControlAffinity.leading",
		"body": [
			"ListTileControlAffinity.leading"
		],
		"description": "ListTileControlAffinity.leading"
	},
	"ListTileControlAffinity.trailing": {
		"scope": "lua",
		"prefix": "ListTileControlAffinity.trailing",
		"body": [
			"ListTileControlAffinity.trailing"
		],
		"description": "ListTileControlAffinity.trailing"
	},
	"ListTileControlAffinity.platform": {
		"scope": "lua",
		"prefix": "ListTileControlAffinity.platform",
		"body": [
			"ListTileControlAffinity.platform"
		],
		"description": "ListTileControlAffinity.platform"
	},
	"TimePickerEntryMode.dial": {
		"scope": "lua",
		"prefix": "TimePickerEntryMode.dial",
		"body": [
			"TimePickerEntryMode.dial"
		],
		"description": "TimePickerEntryMode.dial"
	},
	"TimePickerEntryMode.input": {
		"scope": "lua",
		"prefix": "TimePickerEntryMode.input",
		"body": [
			"TimePickerEntryMode.input"
		],
		"description": "TimePickerEntryMode.input"
	},
	"DatePickerMode.day": {
		"scope": "lua",
		"prefix": "DatePickerMode.day",
		"body": [
			"DatePickerMode.day"
		],
		"description": "DatePickerMode.day"
	},
	"DatePickerMode.year": {
		"scope": "lua",
		"prefix": "DatePickerMode.year",
		"body": [
			"DatePickerMode.year"
		],
		"description": "DatePickerMode.year"
	},
	"DatePickerEntryMode.calendar": {
		"scope": "lua",
		"prefix": "DatePickerEntryMode.calendar",
		"body": [
			"DatePickerEntryMode.calendar"
		],
		"description": "DatePickerEntryMode.calendar"
	},
	"DatePickerEntryMode.input": {
		"scope": "lua",
		"prefix": "DatePickerEntryMode.input",
		"body": [
			"DatePickerEntryMode.input"
		],
		"description": "DatePickerEntryMode.input"
	},
	"DatePickerEntryMode.calendarOnly": {
		"scope": "lua",
		"prefix": "DatePickerEntryMode.calendarOnly",
		"body": [
			"DatePickerEntryMode.calendarOnly"
		],
		"description": "DatePickerEntryMode.calendarOnly"
	},
	"DatePickerEntryMode.inputOnly": {
		"scope": "lua",
		"prefix": "DatePickerEntryMode.inputOnly",
		"body": [
			"DatePickerEntryMode.inputOnly"
		],
		"description": "DatePickerEntryMode.inputOnly"
	},
	"Radio:new()": {
		"scope": "lua",
		"prefix": "Radio:new()",
		"body": [
			"Radio:new({",
			"\tvalue = false,",
			"\tgroupValue = false,",
			"\tonChanged = function(value)",
			"\t\t$1",
			"\tend\n})"
		],
		"description": "Radio:new()",
	},
	"RadioListTile:new()": {
		"scope": "lua",
		"prefix": "RadioListTile:new()",
		"body": [
			"RadioListTile:new({",
			"\tvalue = 1,",
			"\ttgroupValue = 2,",
			"\ttitle = nil$1,",
			"\tsubtitle = nil$2,",
			"\tcontrolAffinity = ListTileControlAffinity.leading$3,",
			"\tonChanged = function(value)",
			"\t\t$4",
			"\tend\n})"
		],
		"description": "RadioListTile:new()",
	},
	"Switch:new()": {
		"scope": "lua",
		"prefix": "Switch:new()",
		"body": [
			"Switch:new({",
			"\tvalue = false,",
			"\tonChanged = function(value)",
			"\t\t$4",
			"\tend\n})"
		],
		"description": "Switch:new()",
	},
	"Slider:new()": {
		"scope": "lua",
		"prefix": "Slider:new()",
		"body": [
			"Slider:new({",
			"\tvalue = 0.2,",
			"\tmin = 0,",
			"\tmax = 1.0,",
			"\tonChanged = function(value)",
			"\t\t$1",
			"\tend\n})"
		],
		"description": "Slider:new()",
	},
	"CircleAvatar:new()": {
		"scope": "lua",
		"prefix": "CircleAvatar:new()",
		"body": [
			"CircleAvatar:new({",
			"\tchild = nil,",
			"\tbackgroundImage = nil,",
			"\tforegroundImage = nil,",
			"\tbackgroundColor = nil,",
			"\tforegroundColor = nil,",
			"\tonChanged = function(value)",
			"\t\t$1",
			"\tend\n})"
		],
		"description": "CircleAvatar:new()",
	},
	"ClipRect:new": {
		"scope": "lua",
		"prefix": "ClipRect:new",
		"body": [
			"ClipRect:new({\n\tchild = $1,\n\tclipBehavior = $2\n})"
		],
		"description": "ClipRect:new"
	},
	"RectClipper()": {
		"scope": "lua",
		"prefix": "RectClipper()",
		"body": [
			"RectClipper({",
			"\tcreateRect = function(width,height)",
			"\t\treturn Rect.fromLTRB({\n\t\t\tleft = $1,\n\t\t\ttop = $2,\n\t\t\tright = $3,\n\t\t\tbottom = $4\n\t\t})",
			"\tend",
			"})",
			
		],
		"description": "RectClipper()"
	},
	"RRectClipper()": {
		"scope": "lua",
		"prefix": "RRectClipper()",
		"body": [
			"RRectClipper({",
			"\tcreateRRect = function(width,height)",
			"\t\treturn RRect.fromLTRBXY({\n\t\t\tleft = $1,\n\t\t\ttop = $2,\n\t\t\tright = $3,\n\t\t\tbottom = $4,\n\t\t\tradiusX = 0$5,\n\t\t\tradiusY = 0$6\n\t\t})",
			"\tend",
			"})",
			
		],
		"description": "RectClipper()"
	},
	"RRect.fromLTRBXY": {
		"scope": "lua",
		"prefix": "Rect.fromLTRBXY",
		"body": [
			"Rect.fromLTRBXY({\n\tleft = $1,\n\ttop = $2,\n\tright = $3,\n\tbottom = $4,\n\tradiusX = 0$5,\n\tradiusY = 0$6\n})"
		],
		"description": "Rect.fromLTRBXY"
	},
	"RRect.fromLTRBR": {
		"scope": "lua",
		"prefix": "Rect.fromLTRBR",
		"body": [
			"Rect.fromLTRBR({\n\tleft = $1,\n\ttop = $2,\n\twidth = $3,\n\theight = $4,\n\tradius = 0$5\n})"
		],
		"description": "Rect.fromLTRBR"
	},
	"RRect.fromRectXY": {
		"scope": "lua",
		"prefix": "Rect.fromRectXY",
		"body": [
			"Rect.fromRectXY({\n\trect = $1,\n\tradiusX = 0$2,\n\tradiusY = 0$3\n})"
		],
		"description": "Rect.fromRectXY"
	},
	"RRect.fromRectAndRadius": {
		"scope": "lua",
		"prefix": "Rect.fromRectAndRadius",
		"body": [
			"Rect.fromRectAndRadius({\n\trect = $1,\n\tradius = 0$2\n})"
		],
		"description": "Rect.fromRectAndRadius"
	},
	"RRect.fromLTRBAndCorners": {
		"scope": "lua",
		"prefix": "Rect.fromLTRBAndCorners",
		"body": [
			"Rect.fromLTRBAndCorners({\n\tleft = $1,\n\ttop = $2,\n\tright = $3,\n\tbottom = $4,\n\ttopLeft = 0$5,\n\ttopRight = 0$6,\n\tbottomRight = 0$7,\n\tbottomLeft = 0$8\n})"
		],
		"description": "Rect.fromLTRBAndCorners"
	},
	"RRect.fromRectAndCorners": {
		"scope": "lua",
		"prefix": "Rect.fromRectAndCorners",
		"body": [
			"Rect.fromRectAndCorners({\n\trect = $1,\n\ttopLeft = 0$2,\n\ttopRight = 0$3,\n\tbottomRight = 0$4,\n\tbottomLeft = 0$5\n})"
		],
		"description": "Rect.fromRectAndCorners"
	},
	"ClipPath:new()": {
		"scope": "lua",
		"prefix": "ClipPath:new()",
		"body": [
			"ClipPath:new({\n\tchild = $1,\n\tclipper = $2,\n\tclipBehavior = Clip.antiAlias\n})"
		],
		"description": "ClipPath:new()",
	},
	"PathClipper:new()": {
		"scope": "lua",
		"prefix": "PathClipper:new()",
		"body": [
			"PathClipper:new({",
			"\tcreatePath = function(width,height)",
			"\t\tlocal p = Path:new()",
			"\t\treturn p",
			"\tend",
			"})"
		],
		"description": "PathClipper:new()",
	},
	"Path:new()": {
		"scope": "lua",
		"prefix": "Path:new()",
		"body": [
			"Path:new()--返回path的一个实例"
		],
		"description": "Path:new()",
	},
	"Path:setFillType()": {
		"scope": "lua",
		"prefix": "Path:setFillType()",
		"body": [
			"Path:setFillType({\n\tpath = $1,\n\tfillType = PathFillType.nonZero$2\n})--设置path类型"
		],
		"description": "Path:setFillType()",
	},
	"Path:getFillType()": {
		"scope": "lua",
		"prefix": "Path:getFillType()",
		"body": [
			"Path:getFillType()--获取path类型 整型"
		],
		"description": "Path:getFillType()",
	},
	"Path:moveTo()": {
		"scope": "lua",
		"prefix": "Path:moveTo()",
		"body": [
			"Path:moveTo({path = $1,x = $2,y = $3})--移动到一点"
		],
		"description": "Path:moveTo()",
	},
	"Path:relativeMoveTo()": {
		"scope": "lua",
		"prefix": "Path:relativeMoveTo()",
		"body": [
			"Path:relativeMoveTo({path = $1,dx = $2,dy = $3})--相对移动到一点"
		],
		"description": "Path:relativeMoveTo()",
	},
	"Path:lineTo()": {
		"scope": "lua",
		"prefix": "Path:lineTo()",
		"body": [
			"Path:lineTo({path = $1,x = $2,y = $3})--划线到一点"
		],
		"description": "Path:lineTo()",
	},
	"Path:relativeLineTo()": {
		"scope": "lua",
		"prefix": "Path:relativeLineTo()",
		"body": [
			"Path:relativeLineTo({path = $1,dx = $2,dy = $3})--相对划线到一点"
		],
		"description": "Path:relativeLineTo()",
	},
	"Path:quadraticBezierTo()": {
		"scope": "lua",
		"prefix": "Path:quadraticBezierTo()",
		"body": [
			"Path:quadraticBezierTo({\n\tpath = $1,\n\tx1 = $2,\n\ty1 = $3,\n\tx2 = $2,\n\ty2 = $3\n})--二次贝塞尔"
		],
		"description": "Path:quadraticBezierTo()",
	},
	"Path:relativeQuadraticBezierTo()": {
		"scope": "lua",
		"prefix": "Path:relativeQuadraticBezierTo()",
		"body": [
			"Path:relativeQuadraticBezierTo({\n\tpath = $1,\n\tx1 = $2,\n\ty1 = $3,\n\tx2 = $2,\n\ty2 = $3\n})--相对二次贝塞尔"
		],
		"description": "Path:relativeQuadraticBezierTo()",
	},
	"Path:cubicTo()": {
		"scope": "lua",
		"prefix": "Path:cubicTo()",
		"body": [
			"Path:cubicTo({\n\tpath = $1,\n\tx1 = $2,\n\ty1 = $3,\n\tx2 = $4,\n\ty2 = $5,\n\tx3 = $6,\n\ty3 = $7\n})--相对三次贝塞尔"
		],
		"description": "Path:cubicTo()",
	},
	"Path:relativeCubicTo()": {
		"scope": "lua",
		"prefix": "Path:relativeCubicTo()",
		"body": [
			"Path:relativeCubicTo({\n\tpath = $1,\n\tx1 = $2,\n\ty1 = $3,\n\tx2 = $4,\n\ty2 = $5,\n\tx3 = $6,\n\ty3 = $7\n})--相对三次贝塞尔"
		],
		"description": "Path:relativeCubicTo()",
	},
	"Path:conicTo()": {
		"scope": "lua",
		"prefix": "Path:conicTo()",
		"body": [
			"Path:conicTo({\n\tpath = $1,\n\tx1 = $2,\n\ty1 = $3,\n\tx2 = $4,\n\ty2 = $5,\n\tw = $6\n})--二次曲线贝塞尔"
		],
		"description": "Path:conicTo()",
	},
	"Path:relativeConicTo()": {
		"scope": "lua",
		"prefix": "Path:relativeConicTo()",
		"body": [
			"Path:relativeConicTo({\n\tpath = $1,\n\tx1 = $2,\n\ty1 = $3,\n\tx2 = $4,\n\ty2 = $5,\n\tw = $6\n})--相对二次曲线贝塞尔"
		],
		"description": "Path:relativeConicTo()",
	},
	"Path:arcTo()": {
		"scope": "lua",
		"prefix": "Path:arcTo()",
		"body": [
			"Path:arcTo({\n\tpath = $1,\n\trect = $2,\n\tstartAngle = $3,\n\tsweepAngle = $4,\n\tforceMoveTo = $5--浮点型\n})--弧形"
		],
		"description": "Path:arcTo()",
	},
	"Path:arcToPoint()": {
		"scope": "lua",
		"prefix": "Path:arcToPoint()",
		"body": [
			"Path:arcToPoint({\n\tpath = $1,\n\tarcEnd = $2--offset类型,\n\tradius = $2--浮点,\n\trotation = $3--浮点,\n\tlargeArc = false$4--布尔,\n\tclockwise = false$5--布尔\n})--弧形到点"
		],
		"description": "Path:arcToPoint()",
	},
	"Path:relativeArcToPoint()": {
		"scope": "lua",
		"prefix": "Path:relativeArcToPoint()",
		"body": [
			"Path:relativeArcToPoint({\n\tpath = $1,\n\tarcEndDelta = $2--offset类型,\n\tradius = $3--浮点,\n\trotation = $4--浮点,\n\tlargeArc = false$5--布尔,\n\tclockwise = false$6--布尔\n})--弧形到点"
		],
		"description": "Path:relativeArcToPoint()",
	},
	"Path:addRect()": {
		"scope": "lua",
		"prefix": "Path:addRect()",
		"body": [
			"Path:addRect({\n\tpath = $1,\n\trect = $2,\n\tstartAngle = $3,\n\tsweepAngle = $4,\n\tforceMoveTo = $5--浮点型\n})"
		],
		"description": "Path:addRect()",
	},
	"Path:addOval()": {
		"scope": "lua",
		"prefix": "Path:addOval()",
		"body": [
			"Path:addOval({\n\tpath = $1,\n\toval = $2,\n\tstartAngle = $3,\n\tsweepAngle = $4,\n\tforceMoveTo = $5--浮点型\n})--"
		],
		"description": "Path:addOval()",
	},
	"Path:addPolygon()": {
		"scope": "lua",
		"prefix": "Path:addPolygon()",
		"body": [
			"Path:addPolygon({\n\tpath = $1,\n\tpoints = {}$2--offset数组,\n\tclose = $3--bool类型\n})--"
		],
		"description": "Path:addPolygon()",
	},
	"Path:addRRect()": {
		"scope": "lua",
		"prefix": "Path:addRRect()",
		"body": [
			"Path:addRRect({\n\tpath = $1,\n\trrect = {}$2--RRect类型\n})--"
		],
		"description": "Path:addRRect()",
	},
	"Path:addPath()": {
		"scope": "lua",
		"prefix": "Path:addPath()",
		"body": [
			"Path:addPath({\n\tpath = $1,\n\taddPath = {}$2--path类型,\n\toffset = $2--offset类型\n})--"
		],
		"description": "Path:addPath()",
	},
	"Path:extendWithPath()": {
		"scope": "lua",
		"prefix": "Path:extendWithPath()",
		"body": [
			"Path:extendWithPath({\n\tpath = $1,\n\taddPath = {}$2--path类型,\n\toffset = $2--offset类型\n})--"
		],
		"description": "Path:extendWithPath()",
	},
	"Path:close()": {
		"scope": "lua",
		"prefix": "Path:close()",
		"body": [
			"Path:close({\n\tpath = $1})--关闭"
		],
		"description": "Path:close()",
	},
	"Path:reset()": {
		"scope": "lua",
		"prefix": "Path:reset()",
		"body": [
			"Path:reset({\n\tpath = $1})--重置"
		],
		"description": "Path:reset()",
	},
	"Path:contains()": {
		"scope": "lua",
		"prefix": "Path:contains()",
		"body": [
			"Path:contains({\n\tpath = $1,\n\tpoint = $2\n})--包含"
		],
		"description": "Path:contains()",
	},
	"Path:getBounds()": {
		"scope": "lua",
		"prefix": "Path:getBounds()",
		"body": [
			"Path:getBounds({\n\tpath = $1})--获取大小范围"
		],
		"description": "Path:getBounds()",
	},
	"Path:combine()": {
		"scope": "lua",
		"prefix": "Path:combine()",
		"body": [
			"Path:combine({\n\toperation = $1,\n\toperation = PathOperation.difference$2,\n\tpath1 = $3,\n\tpath2 = $4\n})--融合path"
		],
		"description": "Path:combine()",
	},
	"Chip:new()": {
		"scope": "lua",
		"prefix": "Chip:new()",
		"body": [
			"Chip:new({",
			"\tlabel = '',",
			"\tavatar = nil,",
			"\tlabelStyle = nil,",
			"\tlabelPadding = nil,",
			"\tdeleteIcon = nil,",
			"\tonDeleted = function()",
			"\t\t$1",
			"\tend\n})"
		],
		"description": "Chip:new()",
	},
	"DataTable:new()": {
		"scope": "lua",
		"prefix": "DataTable:new()",
		"body": [
			"DataTable:new({",
			"\tcolumns = {},",
			"\trows = {},",
			"\tsortColumnIndex = nil,",
			"\tonSelectAll = function(value)",
			"\t\t$1",
			"\tend\n})"
		],
		"description": "DataTable:new()",
	},
	"DataColumn:new()": {
		"scope": "lua",
		"prefix": "DataColumn:new()",
		"body": [
			"DataColumn:new({",
			"\tlabel = $1,--widget 类型",
			"\ttooltip = $2,",
			"\tonSort = function(index,select)",
			"\t\t$3",
			"\tend\n})"
		],
		"description": "DataColumn:new()",
	},
	"DataCell:new()": {
		"scope": "lua",
		"prefix": "DataCell:new()",
		"body": [
			"DataCell:new({",
			"\tchild = $1,--widget 类型",
			"\tplaceholder = false$2,",
			"\tshowEditIcon = false$3,",
			"\tonTap = function()",
			"\t\t$4",
			"\tend,",
			"\tonLongPress = function()",
			"\t\t$5",
			"\tend",
			"})"
		],
		"description": "DataCell:new()",
	},
	"DataRow:new()": {
		"scope": "lua",
		"prefix": "DataRow:new()",
		"body": [
			"DataRow:new({",
			"\tcells = {},--datacell 类型",
			"\tselected = false$2,",
			"\tonSelectChanged = function(value)",
			"\t\t$3",
			"\tend,",
			"\tonLongPress = function()",
			"\t\t$4",
			"\tend",
			"})"
		],
		"description": "DataRow:new()",
	},
	"TableBorder:new()": {
		"scope": "lua",
		"prefix": "TableBorder:new()",
		"body": [
			"TableBorder:new({",
			"\ttop = BorderSide.none--BorderSide 类型",
			"\tright = BorderSide.none",
			"\tbottom = BorderSide.none",
			"\tleft = BorderSide.none",
			"\thorizontalInside = BorderSide.none",
			"\tverticalInside = BorderSide.none",
			"\tborderRadius = BorderRadius.all(0)",
			"\tend",
			"})"
		],
		"description": "TableBorder:new()",
	},
	"RawMaterialButton:new()": {
		"scope": "lua",
		"prefix": "RawMaterialButton:new()",
		"body": [
			"RawMaterialButton:new({",
			"\tchild = $1,--widget 类型",
			"\tonPressed = function()",
			"\t\t$2",
			"\tend,",
			"})"
		],
		"description": "RawMaterialButton:new()",
	},
	
	
	
	




}